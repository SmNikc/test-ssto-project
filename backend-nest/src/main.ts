import { NestFactory } from '@nestjs/core';
import { ConfigService } from '@nestjs/config';
import { ValidationPipe } from '@nestjs/common';
import { AppModule } from './app.module';

async function bootstrap() {
  // –°–æ–∑–¥–∞–Ω–∏–µ NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const app = await NestFactory.create(AppModule);
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ .env
  const configService = app.get(ConfigService);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
  app.enableCors({
    origin: (origin, callback) => {
      // –ë–µ—Ä–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ origin –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
      const corsOrigins = configService.get<string>('CORS_ORIGIN', 'http://localhost:5173').split(',').map(o => o.trim());
      
      // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã—Ö origin, file:// –∏ null (–¥–ª—è file://)
      if (!origin || corsOrigins.includes(origin) || origin?.startsWith('file://')) {
        callback(null, true);
      } else {
        // –í dev —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (configService.get<string>('NODE_ENV') === 'development') {
          callback(null, true);
        } else {
          callback(new Error('Not allowed by CORS'));
        }
      }
    },
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
    credentials: true,
    allowedHeaders: 'Content-Type, Accept, Authorization',
    preflightContinue: false,
    optionsSuccessStatus: 204,
  });

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      transform: true,
      forbidNonWhitelisted: false,
    }),
  );

  // –ó–∞–ø—É—Å–∫ API –Ω–∞ –ø–æ—Ä—Ç—É –∏–∑ .env
  const port = configService.get<number>('PORT', 3001);
  await app.listen(port);

  console.log(`üöÄ Backend listening on http://localhost:${port}`);
  console.log(`üì° API endpoints available at: http://localhost:${port}/api`);
  console.log(`üîê Keycloak: ${configService.get<string>('KEYCLOAK_ENABLED') === 'true' ? 'Enabled' : 'Disabled'}`);
  console.log(`üåê CORS enabled for: ${configService.get<string>('CORS_ORIGIN', 'http://localhost:5173')}`);
}

bootstrap();