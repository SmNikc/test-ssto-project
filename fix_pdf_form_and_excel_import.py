#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
1. PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
2. –û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Excel —Ñ–∞–π–ª–æ–≤ (updateDashboardData is not defined)

–ü—É—Ç—å: C:\\Projects\\test-ssto-project\\fix_pdf_form_and_excel_import.py
–ó–∞–ø—É—Å–∫: python fix_pdf_form_and_excel_import.py
"""

import os
import re
import sys
from pathlib import Path

def fix_issues():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å PDF —Ñ–æ—Ä–º–æ–π –∏ –∑–∞–≥—Ä—É–∑–∫–æ–π Excel"""
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É index.html
    index_path = Path(r"C:\Projects\test-ssto-project\index.html")
    
    if not index_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {index_path}")
        return False
    
    print(f"üìÑ –ß–∏—Ç–∞—é —Ñ–∞–π–ª: {index_path}")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    try:
        with open(index_path, 'r', encoding='utf-8') as f:
            content = f.read()
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = index_path.with_suffix('.html.backup2')
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    
    changes_made = 0
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: PDF –§–û–†–ú–ê –ù–ê –†–£–°–°–ö–û–ú ==========
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: –§–æ—Ä–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è PDF –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ...")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é exportReportToPDF –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º
    new_export_function = '''
        function exportReportToPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            doc.setFontSize(14);
            doc.text('–ú–ò–ù–¢–†–ê–ù–° –†–û–°–°–ò–ò', 105, 20, { align: 'center' });
            doc.text('–†–û–°–ú–û–†–†–ï–ß–§–õ–û–¢', 105, 30, { align: 'center' });
            doc.text('–§–ì–ë–£ "–ú–û–†–°–ü–ê–°–°–õ–£–ñ–ë–ê"', 105, 40, { align: 'center' });
            doc.text('–ì–ª–∞–≤–Ω—ã–π –º–æ—Ä—Å–∫–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω–æ-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä', 105, 50, { align: 'center' });
            
            doc.setFontSize(16);
            doc.text('–û–¢–ß–ï–¢ –¢–ï–°–¢ –°–°–¢–û', 105, 70, { align: 'center' });
            
            doc.setFontSize(10);
            const currentDate = new Date().toLocaleDateString('ru-RU', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            doc.text(`–î–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è: ${currentDate}`, 20, 90);
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            const requests = JSON.parse(localStorage.getItem('testRequests') || '[]');
            const signals = JSON.parse(localStorage.getItem('signals') || '[]');
            const terminals = JSON.parse(localStorage.getItem('terminals') || '[]');
            
            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            doc.setFontSize(12);
            doc.text('–°–¢–ê–¢–ò–°–¢–ò–ö–ê:', 20, 110);
            doc.setFontSize(10);
            doc.text(`–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: ${requests.length}`, 30, 120);
            doc.text(`–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: ${requests.filter(r => r.status === 'confirmed').length}`, 30, 130);
            doc.text(`–í –æ–∂–∏–¥–∞–Ω–∏–∏: ${requests.filter(r => r.status === 'pending').length}`, 30, 140);
            doc.text(`–í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤: ${signals.length}`, 30, 150);
            doc.text(`–¢–µ—Å—Ç–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤: ${signals.filter(s => s.isTest).length}`, 30, 160);
            doc.text(`–¢—Ä–µ–≤–æ–∂–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤: ${signals.filter(s => !s.isTest).length}`, 30, 170);
            doc.text(`–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤: ${terminals.length}`, 30, 180);
            
            // –ü–æ–¥–ø–∏—Å—å
            doc.setFontSize(10);
            doc.text('–î–µ–∂—É—Ä–Ω—ã–π –ì–ú–°–ö–¶: ___________________', 20, 220);
            doc.text(`–î–∞—Ç–∞: ${currentDate}`, 20, 230);
            doc.text('–ú.–ü.', 150, 240);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            const fileName = `–û—Ç—á–µ—Ç_–°–°–¢–û_${new Date().toISOString().slice(0,10)}.pdf`;
            doc.save(fileName);
            
            showNotification('PDF –æ—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω', 'success');
        }'''
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é exportReportToPDF
    pattern = r'function exportReportToPDF\(\)\s*\{[^}]+(?:\{[^}]*\}[^}]*)*\}'
    if re.search(pattern, content):
        content = re.sub(pattern, new_export_function, content)
        changes_made += 1
        print("  ‚úì –§—É–Ω–∫—Ü–∏—è exportReportToPDF –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å —Ä—É—Å—Å–∫–æ–π —Ñ–æ—Ä–º–æ–π")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é generateConfirmationPDF –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π
    new_confirmation_function = '''
        function generateConfirmationPDF(requestId) {
            const request = JSON.parse(localStorage.getItem('testRequests') || '[]')
                .find(r => r.id === requestId);
            
            if (!request) return;
            
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // –®–∞–ø–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            doc.setFontSize(12);
            doc.text('–ú–ò–ù–¢–†–ê–ù–° –†–û–°–°–ò–ò', 105, 15, { align: 'center' });
            doc.text('–†–û–°–ú–û–†–†–ï–ß–§–õ–û–¢', 105, 22, { align: 'center' });
            doc.text('–§–ì–ë–£ "–ú–û–†–°–ü–ê–°–°–õ–£–ñ–ë–ê"', 105, 29, { align: 'center' });
            doc.text('–ì–ª–∞–≤–Ω—ã–π –º–æ—Ä—Å–∫–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω–æ-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä', 105, 36, { align: 'center' });
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            doc.setFontSize(14);
            doc.text('–ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï', 105, 50, { align: 'center' });
            doc.text('–ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –°–°–¢–û', 105, 58, { align: 'center' });
            
            // –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
            doc.setFontSize(11);
            const confirmDate = new Date(request.confirmedAt || Date.now());
            const dateStr = confirmDate.toLocaleDateString('ru-RU', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            doc.text(`–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${request.id}`, 20, 75);
            doc.text(`–î–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${dateStr}`, 20, 85);
            
            doc.text(`–ù–∞–∑–≤–∞–Ω–∏–µ —Å—É–¥–Ω–∞: ${request.vesselName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`, 20, 100);
            doc.text(`–ò–ú–û –Ω–æ–º–µ—Ä: ${request.imo || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 110);
            doc.text(`MMSI: ${request.mmsi || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 120);
            doc.text(`–ù–æ–º–µ—Ä –ò–Ω–º–∞—Ä—Å–∞—Ç: ${request.inmarsat || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 130);
            
            doc.text(`–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${request.latitude || '0'}¬∞ ${request.longitude || '0'}¬∞`, 20, 145);
            doc.text(`–¢–∏–ø —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: ${request.terminalType || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 155);
            
            doc.text(`–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: ${request.contactPerson || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`, 20, 170);
            doc.text(`Email: ${request.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 180);
            doc.text(`–¢–µ–ª–µ—Ñ–æ–Ω: ${request.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}`, 20, 190);
            
            // –ü–æ–¥–ø–∏—Å—å
            doc.setFontSize(10);
            doc.text('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞', 20, 210);
            doc.text('–î–µ–∂—É—Ä–Ω—ã–π –ì–ú–°–ö–¶: ___________________', 20, 225);
            doc.text(`–î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}`, 20, 235);
            doc.text('–ú.–ü.', 150, 245);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º
            const fileName = `–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ_${request.id}_${request.vesselName || '—Å—É–¥–Ω–æ'}.pdf`;
            doc.save(fileName);
            
            showNotification(`–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è –∑–∞—è–≤–∫–∏ ${request.id} —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ`, 'success');
        }'''
    
    # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é generateConfirmationPDF
    pattern2 = r'function generateConfirmationPDF\(requestId\)\s*\{[^}]+(?:\{[^}]*\}[^}]*)*\}'
    if re.search(pattern2, content):
        content = re.sub(pattern2, new_confirmation_function, content)
        changes_made += 1
        print("  ‚úì –§—É–Ω–∫—Ü–∏—è generateConfirmationPDF –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å —Ä—É—Å—Å–∫–æ–π —Ñ–æ—Ä–º–æ–π")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –û–®–ò–ë–ö–ê updateDashboardData ==========
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2: –û—à–∏–±–∫–∞ updateDashboardData is not defined...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è loadDashboardData
    if 'function loadDashboardData()' in content:
        # –ï—Å–ª–∏ –µ—Å—Ç—å loadDashboardData, –∑–∞–º–µ–Ω—è–µ–º –≤—Å–µ updateDashboardData –Ω–∞ loadDashboardData
        content = content.replace('updateDashboardData()', 'loadDashboardData()')
        changes_made += 1
        print("  ‚úì –ó–∞–º–µ–Ω–µ–Ω–æ updateDashboardData –Ω–∞ loadDashboardData")
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é updateDashboardData
        update_function = '''
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞
        function updateDashboardData() {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
            const requests = JSON.parse(localStorage.getItem('testRequests') || '[]');
            const signals = JSON.parse(localStorage.getItem('signals') || '[]');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const activeCount = document.getElementById('active-requests-count');
            const pendingCount = document.getElementById('pending-requests-count');
            const confirmedCount = document.getElementById('confirmed-requests-count');
            const signalsCount = document.getElementById('signals-count');
            
            if (activeCount) activeCount.textContent = requests.filter(r => r.status === 'active').length;
            if (pendingCount) pendingCount.textContent = requests.filter(r => r.status === 'pending').length;
            if (confirmedCount) confirmedCount.textContent = requests.filter(r => r.status === 'confirmed').length;
            if (signalsCount) signalsCount.textContent = signals.length;
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è loadDashboardData, –≤—ã–∑—ã–≤–∞–µ–º –µ—ë —Ç–æ–∂–µ
            if (typeof loadDashboardData === 'function') {
                loadDashboardData();
            }
        }
        '''
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º —Ç–µ–≥–æ–º </script>
        last_script = content.rfind('</script>')
        if last_script > 0:
            content = content[:last_script] + update_function + '\n' + content[last_script:]
            changes_made += 1
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è updateDashboardData")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3: –ó–ê–ì–†–£–ó–ö–ê EXCEL ==========
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3: –£–ª—É—á—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ Excel...")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é importFromExcel –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
    import_excel_fix = '''
        function importFromExcel(file, type) {
            if (!file) {
                showNotification('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω', 'error');
                return;
            }
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = new Uint8Array(e.target.result);
                    const workbook = XLSX.read(data, {type: 'array'});
                    const firstSheet = workbook.Sheets[workbook.SheetNames[0]];
                    const jsonData = XLSX.utils.sheet_to_json(firstSheet);
                    
                    if (jsonData.length === 0) {
                        showNotification('Excel —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π', 'warning');
                        return;
                    }
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                    let storageKey = '';
                    let successMessage = '';
                    
                    switch(type) {
                        case 'requests':
                            storageKey = 'testRequests';
                            successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞—è–≤–æ–∫: ${jsonData.length}`;
                            break;
                        case 'signals':
                            storageKey = 'signals';
                            successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: ${jsonData.length}`;
                            break;
                        case 'terminals':
                            storageKey = 'terminals';
                            successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤: ${jsonData.length}`;
                            break;
                        default:
                            // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö
                            if (jsonData[0].hasOwnProperty('vesselName') || jsonData[0].hasOwnProperty('vessel_name')) {
                                storageKey = 'testRequests';
                                successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞—è–≤–æ–∫: ${jsonData.length}`;
                            } else if (jsonData[0].hasOwnProperty('signalType') || jsonData[0].hasOwnProperty('signal_type')) {
                                storageKey = 'signals';
                                successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: ${jsonData.length}`;
                            } else {
                                storageKey = 'terminals';
                                successMessage = `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${jsonData.length}`;
                            }
                    }
                    
                    // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const existingData = JSON.parse(localStorage.getItem(storageKey) || '[]');
                    let finalData = jsonData;
                    
                    if (existingData.length > 0) {
                        const confirmReplace = confirm(
                            `–í —Å–∏—Å—Ç–µ–º–µ —É–∂–µ –µ—Å—Ç—å ${existingData.length} –∑–∞–ø–∏—Å–µ–π.\\n` +
                            `–ó–∞–º–µ–Ω–∏—Ç—å –∏—Ö –Ω–∞ ${jsonData.length} –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ñ–∞–π–ª–∞?\\n\\n` +
                            `–î–ê - –∑–∞–º–µ–Ω–∏—Ç—å\\n–ù–ï–¢ - –¥–æ–±–∞–≤–∏—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º\\n–û–¢–ú–ï–ù–ê - –æ—Ç–º–µ–Ω–∏—Ç—å –∏–º–ø–æ—Ä—Ç`
                        );
                        
                        if (confirmReplace === null) {
                            // –û—Ç–º–µ–Ω–∞
                            showNotification('–ò–º–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω', 'info');
                            return;
                        } else if (confirmReplace === false) {
                            // –î–æ–±–∞–≤–∏—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
                            finalData = [...existingData, ...jsonData];
                            successMessage = `–î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${jsonData.length}. –í—Å–µ–≥–æ: ${finalData.length}`;
                        }
                    }
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
                    localStorage.setItem(storageKey, JSON.stringify(finalData));
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                    if (typeof loadRequests === 'function' && storageKey === 'testRequests') {
                        loadRequests();
                    }
                    if (typeof loadSignals === 'function' && storageKey === 'signals') {
                        loadSignals();
                    }
                    if (typeof loadTerminals === 'function' && storageKey === 'terminals') {
                        loadTerminals();
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥
                    if (typeof loadDashboardData === 'function') {
                        loadDashboardData();
                    } else if (typeof updateDashboardData === 'function') {
                        updateDashboardData();
                    }
                    
                    showNotification(successMessage, 'success');
                    
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ:', error);
                    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: ' + error.message, 'error');
                }
            };
            
            reader.onerror = function() {
                showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª', 'error');
            };
            
            reader.readAsArrayBuffer(file);
        }'''
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é importFromExcel –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    pattern3 = r'function importFromExcel\([^)]*\)\s*\{[^}]+(?:\{[^}]*\}[^}]*)*\}'
    if re.search(pattern3, content):
        content = re.sub(pattern3, import_excel_fix, content)
        changes_made += 1
        print("  ‚úì –§—É–Ω–∫—Ü–∏—è importFromExcel –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    else:
        # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
        last_script = content.rfind('</script>')
        if last_script > 0:
            content = content[:last_script] + import_excel_fix + '\n' + content[last_script:]
            changes_made += 1
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è importFromExcel")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...")
    with open(index_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –í–Ω–µ—Å–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {changes_made}")
    print(f"üìù –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {backup_path}")
    
    return True

if __name__ == "__main__":
    try:
        success = fix_issues()
        if success:
            print("\nüéâ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
            print("  1. ‚úÖ PDF —Ñ–æ—Ä–º—ã —Ç–µ–ø–µ—Ä—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
            print("  2. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ updateDashboardData is not defined")
            print("  3. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ Excel —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—ã–±–æ—Ä–∞")
            print("\nüí° –¢–µ–ø–µ—Ä—å:")
            print("  - PDF –æ—Ç—á–µ—Ç—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
            print("  - –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Excel –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –î–∞/–ù–µ—Ç/–û—Ç–º–µ–Ω–∞")
            print("  - –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞")
        else:
            print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞")
            sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)