version: "3.9"
services:
  postgres:
    image: postgres:14-alpine
    container_name: ssto-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ssto
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ssto || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data
      
  backend:
    build:
      context: ./backend-nest
      dockerfile: Dockerfile
    image: test-ssto-project-backend:latest
    container_name: ssto-backend
    depends_on:
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_started
    environment:
      NODE_ENV: production
      PORT: "3001"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/ssto"
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: ssto
      SMTP_HOST: mailhog
      SMTP_PORT: "1025"
      SMTP_USER: od_smrcc@morflot.ru
      SMTP_PASS: dev-password
      SMTP_FROM: "ГМСКЦ <od_smrcc@morflot.ru>"
    ports:
      - "3001:3001"
    networks:
      default:
        aliases:
          - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3001/health || curl -s http://127.0.0.1:3001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
      
  frontend:
    build:
      context: ./frontend
    image: test-ssto-project-frontend:latest
    container_name: ssto-frontend
    depends_on:
      backend:
        condition: service_started
    ports:
      - "80:80"
      
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: ssto-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
      
volumes:
  db_data:
  
networks:
  default:
    name: ssto-net
