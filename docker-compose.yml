version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    container_name: ssto-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ssto
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ssto || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend-nest
      dockerfile: Dockerfile
    image: test-ssto-project-backend:latest
    container_name: ssto-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: "3001"
      # Оставляю хост базы как у сервисного имени 'postgres'.
      # Если у вас было 'ssto-postgres' — замените здесь, но функционал не меняем.
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/ssto"
    ports:
      - "3001:3001"
    networks:
      default:
        aliases:
          - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3001/health || curl -s http://127.0.0.1:3001/health"]
      interval: 10s
      timeout: 3s
      retries: 20

  frontend:
    build:
      context: ./frontend
    image: test-ssto-project-frontend:latest
    container_name: ssto-frontend
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  db_data:

networks:
  default:
    name: ssto-net
