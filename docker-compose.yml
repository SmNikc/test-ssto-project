services:
  postgres:
    image: postgres:14-alpine
    container_name: ssto-postgres
    environment:
      POSTGRES_DB: sstodb
      POSTGRES_USER: ssto
      POSTGRES_PASSWORD: sstopass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ssto -d sstodb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ssto]

  backend:
    build:
      context: ./backend-nest
      dockerfile: Dockerfile
    container_name: ssto-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ssto
      DB_PASSWORD: sstopass
      DB_NAME: sstodb
      CORS_ORIGIN: http://localhost
      KEYCLOAK_ENABLED: "false"
      # DB_BOOTSTRAP: "true"   # включайте только на один прогон для точечной правки схемы
    ports:
      - "3001:3001"
    networks: [ssto]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ssto-frontend
    depends_on:
      backend:
        condition: service_started
    ports:
      - "80:80"
    networks: [ssto]

networks:
  ssto: {}

volumes:
  postgres_data: {}