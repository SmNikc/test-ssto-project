#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–ª–∏–∫–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π –≤ index.html
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∫–æ–≥–¥–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è

–ü—É—Ç—å: C:\\Projects\\test-ssto-project\\fix_click_handlers.py
–ó–∞–ø—É—Å–∫: python fix_click_handlers.py
"""

import os
import re
import sys
from pathlib import Path

def fix_click_handlers():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–∫–∞–º–∏"""
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É index.html
    index_path = Path(r"C:\Projects\test-ssto-project\index.html")
    
    if not index_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {index_path}")
        return False
    
    print(f"üìÑ –ß–∏—Ç–∞—é —Ñ–∞–π–ª: {index_path}")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    try:
        with open(index_path, 'r', encoding='utf-8') as f:
            content = f.read()
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = index_path.with_suffix('.html.backup_handlers')
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    
    changes_made = 0
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï ==========
    print("\nüîß –î–æ–±–∞–≤–ª—è—é –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    init_script = '''
    <script>
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', function() {
            console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¢–ï–°–¢ –°–°–¢–û...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
                if (typeof loadDashboardData === 'function') {
                    loadDashboardData();
                }
                if (typeof loadRequests === 'function') {
                    loadRequests();
                }
                if (typeof loadSignals === 'function') {
                    loadSignals();
                }
                if (typeof loadTerminals === 'function') {
                    loadTerminals();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
                if (typeof switchTab === 'function') {
                    switchTab('dashboard');
                } else {
                    // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ switchTab –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
                    const dashboardTab = document.querySelector('[data-tab="dashboard"]');
                    if (dashboardTab) {
                        dashboardTab.style.display = 'block';
                    }
                }
                
                console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            }
        });
        
        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
        function switchTab(tabName) {
            console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É:', tabName);
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
            const allTabs = document.querySelectorAll('.tab-content, [data-tab]');
            allTabs.forEach(tab => {
                tab.style.display = 'none';
                tab.classList.remove('active');
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
            const targetTab = document.querySelector(`[data-tab="${tabName}"], #${tabName}-tab, .${tabName}-content`);
            if (targetTab) {
                targetTab.style.display = 'block';
                targetTab.classList.add('active');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
            const allButtons = document.querySelectorAll('.tab-button, [onclick*="switchTab"]');
            allButtons.forEach(btn => {
                btn.classList.remove('active');
                if (btn.textContent.toLowerCase().includes(tabName.toLowerCase()) || 
                    btn.getAttribute('onclick')?.includes(tabName)) {
                    btn.classList.add('active');
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
            switch(tabName) {
                case 'dashboard':
                case '–≥–ª–∞–≤–Ω–∞—è':
                    if (typeof loadDashboardData === 'function') loadDashboardData();
                    break;
                case 'requests':
                case '–∑–∞—è–≤–∫–∏':
                    if (typeof loadRequests === 'function') loadRequests();
                    break;
                case 'signals':
                case '—Å–∏–≥–Ω–∞–ª—ã':
                    if (typeof loadSignals === 'function') loadSignals();
                    break;
                case 'terminals':
                case '—Ç–µ—Ä–º–∏–Ω–∞–ª—ã':
                    if (typeof loadTerminals === 'function') loadTerminals();
                    break;
                case 'map':
                case '–∫–∞—Ä—Ç–∞':
                    if (typeof initMap === 'function') initMap();
                    break;
                case 'reports':
                case '–æ—Ç—á—ë—Ç—ã':
                case '–æ—Ç—á–µ—Ç—ã':
                    if (typeof loadReports === 'function') loadReports();
                    break;
            }
        }
    </script>
    '''
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º </body> –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if 'DOMContentLoaded' not in content:
        body_close = content.rfind('</body>')
        if body_close > 0:
            content = content[:body_close] + init_script + '\n' + content[body_close:]
            changes_made += 1
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö –ù–ê–í–ò–ì–ê–¶–ò–ò ==========
    print("\nüîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    
    # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∏—Ö —Ç–∞–±–æ–≤
    nav_buttons = [
        ('–ì–ª–∞–≤–Ω–∞—è', 'dashboard'),
        ('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'new-request'),
        ('–ó–∞—è–≤–∫–∏', 'requests'),
        ('–°–∏–≥–Ω–∞–ª—ã', 'signals'),
        ('–¢–µ—Ä–º–∏–Ω–∞–ª—ã', 'terminals'),
        ('–ö–∞—Ä—Ç–∞', 'map'),
        ('–û—Ç—á—ë—Ç—ã', 'reports'),
        ('–û—Ç—á–µ—Ç—ã', 'reports'),
    ]
    
    for button_text, tab_name in nav_buttons:
        # –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º onclick –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        pattern = rf'(<[^>]*>[^<]*{re.escape(button_text)}[^<]*</[^>]+>)'
        matches = list(re.finditer(pattern, content, re.IGNORECASE))
        
        for match in matches:
            button_html = match.group(0)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –∏ –Ω–µ—Ç onclick
            if ('button' in button_html.lower() or 'a' in button_html.lower() or 'div' in button_html.lower()) and 'onclick' not in button_html.lower():
                # –î–æ–±–∞–≤–ª—è–µ–º onclick –≤ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
                new_button = re.sub(r'(<[^>]+)', rf'\1 onclick="switchTab(\'{tab_name}\')"', button_html, count=1)
                content = content.replace(button_html, new_button)
                changes_made += 1
                print(f"  ‚úì –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '{button_text}'")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3: –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö –î–ï–ô–°–¢–í–ò–ô ==========
    print("\nüîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π...")
    
    action_handlers = '''
    <script>
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ Excel
        function handleExcelUpload(inputElement, type) {
            if (inputElement.files && inputElement.files[0]) {
                importFromExcel(inputElement.files[0], type);
                inputElement.value = ''; // –û—á–∏—â–∞–µ–º input –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            }
        }
        
        // –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel
        function exportToExcel(type) {
            console.log('–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel:', type);
            
            let data = [];
            let fileName = '';
            
            switch(type) {
                case 'requests':
                    data = JSON.parse(localStorage.getItem('testRequests') || '[]');
                    fileName = '–ó–∞—è–≤–∫–∏_–°–°–¢–û.xlsx';
                    break;
                case 'signals':
                    data = JSON.parse(localStorage.getItem('signals') || '[]');
                    fileName = '–°–∏–≥–Ω–∞–ª—ã_–°–°–¢–û.xlsx';
                    break;
                case 'terminals':
                    data = JSON.parse(localStorage.getItem('terminals') || '[]');
                    fileName = '–¢–µ—Ä–º–∏–Ω–∞–ª—ã_–°–°–¢–û.xlsx';
                    break;
                default:
                    data = {
                        requests: JSON.parse(localStorage.getItem('testRequests') || '[]'),
                        signals: JSON.parse(localStorage.getItem('signals') || '[]'),
                        terminals: JSON.parse(localStorage.getItem('terminals') || '[]')
                    };
                    fileName = '–î–∞–Ω–Ω—ã–µ_–°–°–¢–û.xlsx';
            }
            
            if (data.length === 0 && !data.requests) {
                showNotification('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞', 'warning');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É Excel
            const wb = XLSX.utils.book_new();
            
            if (data.requests) {
                // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç
                XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(data.requests), '–ó–∞—è–≤–∫–∏');
                XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(data.signals), '–°–∏–≥–Ω–∞–ª—ã');
                XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(data.terminals), '–¢–µ—Ä–º–∏–Ω–∞–ª—ã');
            } else {
                // –û–¥–∏–Ω–æ—á–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç
                XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(data), '–î–∞–Ω–Ω—ã–µ');
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            XLSX.writeFile(wb, fileName);
            showNotification('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Excel', 'success');
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ email –æ—á–µ—Ä–µ–¥–∏
        function processEmailQueue() {
            console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ email –æ—á–µ—Ä–µ–¥–∏...');
            showNotification('–û–±—Ä–∞–±–æ—Ç–∫–∞ email –æ—á–µ—Ä–µ–¥–∏ –∑–∞–ø—É—â–µ–Ω–∞', 'info');
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            setTimeout(() => {
                showNotification('Email –æ—á–µ—Ä–µ–¥—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞', 'success');
            }, 2000);
        }
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ü–æ–∏—Å–∫-–ú–æ—Ä–µ
        function syncWithPoiskMore() {
            console.log('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ü–æ–∏—Å–∫-–ú–æ—Ä–µ...');
            showNotification('–ù–∞—á–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –ü–æ–∏—Å–∫-–ú–æ—Ä–µ', 'info');
            
            setTimeout(() => {
                showNotification('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'success');
            }, 3000);
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        function generateTestData() {
            console.log('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
            
            if (confirm('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–æ–±–∞–≤–∏—Ç –ø—Ä–∏–º–µ—Ä—ã –∑–∞—è–≤–æ–∫ –∏ —Å–∏–≥–Ω–∞–ª–æ–≤.')) {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
                const testRequests = [
                    {
                        id: 'TEST-' + Date.now(),
                        vesselName: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å—É–¥–Ω–æ 1',
                        imo: '1234567',
                        mmsi: '273456789',
                        inmarsat: '451234567',
                        status: 'pending',
                        createdAt: new Date().toISOString(),
                        contactPerson: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
                        email: 'test@example.com',
                        phone: '+7 900 123-45-67'
                    }
                ];
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã
                const testSignals = [
                    {
                        id: 'SIG-' + Date.now(),
                        vesselName: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å—É–¥–Ω–æ 1',
                        signalType: 'TEST',
                        isTest: true,
                        receivedAt: new Date().toISOString(),
                        latitude: 59.9311,
                        longitude: 30.3609,
                        status: 'processed'
                    }
                ];
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –¥–∞–Ω–Ω—ã–º
                const existingRequests = JSON.parse(localStorage.getItem('testRequests') || '[]');
                const existingSignals = JSON.parse(localStorage.getItem('signals') || '[]');
                
                localStorage.setItem('testRequests', JSON.stringify([...existingRequests, ...testRequests]));
                localStorage.setItem('signals', JSON.stringify([...existingSignals, ...testSignals]));
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                if (typeof loadDashboardData === 'function') loadDashboardData();
                if (typeof loadRequests === 'function') loadRequests();
                if (typeof loadSignals === 'function') loadSignals();
                
                showNotification('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã', 'success');
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        function checkSystem() {
            console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
            showNotification('–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...', 'info');
            
            setTimeout(() => {
                const status = {
                    localStorage: typeof(Storage) !== "undefined",
                    excel: typeof(XLSX) !== "undefined",
                    pdf: typeof(jspdf) !== "undefined",
                    map: typeof(ol) !== "undefined"
                };
                
                let message = '–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:\\n';
                message += `‚úÖ LocalStorage: ${status.localStorage ? 'OK' : 'ERROR'}\\n`;
                message += `‚úÖ Excel (XLSX): ${status.excel ? 'OK' : 'ERROR'}\\n`;
                message += `‚úÖ PDF (jsPDF): ${status.pdf ? 'OK' : 'ERROR'}\\n`;
                message += `‚úÖ –ö–∞—Ä—Ç–∞ (OpenLayers): ${status.map ? 'OK' : 'ERROR'}`;
                
                alert(message);
                showNotification('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'success');
            }, 1000);
        }
        
        // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
        function simulateIncomingSignal() {
            console.log('–°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–∏–≥–Ω–∞–ª–∞...');
            
            const signal = {
                id: 'SIG-' + Date.now(),
                vesselName: '–°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å—É–¥–Ω–æ',
                signalType: Math.random() > 0.5 ? 'TEST' : 'ALERT',
                isTest: Math.random() > 0.5,
                receivedAt: new Date().toISOString(),
                latitude: 55 + Math.random() * 10,
                longitude: 30 + Math.random() * 10,
                status: 'new',
                mmsi: '273' + Math.floor(Math.random() * 1000000),
                message: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∏–≥–Ω–∞–ª'
            };
            
            const signals = JSON.parse(localStorage.getItem('signals') || '[]');
            signals.unshift(signal);
            localStorage.setItem('signals', JSON.stringify(signals));
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const alertType = signal.isTest ? 'info' : 'warning';
            const alertText = signal.isTest ? '–ü–æ–ª—É—á–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª' : '‚ö†Ô∏è –ü–û–õ–£–ß–ï–ù –¢–†–ï–í–û–ñ–ù–´–ô –°–ò–ì–ù–ê–õ!';
            showNotification(`${alertText} –æ—Ç ${signal.vesselName}`, alertType);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            if (typeof loadSignals === 'function') loadSignals();
            if (typeof loadDashboardData === 'function') loadDashboardData();
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤ –µ—Å–ª–∏ —ç—Ç–æ —Ç—Ä–µ–≤–æ–≥–∞
            if (!signal.isTest) {
                switchTab('signals');
            }
        }
        
        // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        function showNotification(message, type = 'info') {
            console.log(`[${type.toUpperCase()}] ${message}`);
            
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 20px;
                background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : type === 'warning' ? '#ff9800' : '#2196F3'};
                color: white;
                border-radius: 5px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.2);
                z-index: 10000;
                animation: slideIn 0.3s ease;
                max-width: 300px;
            `;
            notification.textContent = message;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            document.body.appendChild(notification);
            
            // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => {
                    if (document.body.contains(notification)) {
                        document.body.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
        if (!document.querySelector('#notification-styles')) {
            const style = document.createElement('style');
            style.id = 'notification-styles';
            style.textContent = `
                @keyframes slideIn {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes slideOut {
                    from { transform: translateX(0); opacity: 1; }
                    to { transform: translateX(100%); opacity: 0; }
                }
            `;
            document.head.appendChild(style);
        }
    </script>
    '''
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if 'handleExcelUpload' not in content:
        body_close = content.rfind('</body>')
        if body_close > 0:
            content = content[:body_close] + action_handlers + '\n' + content[body_close:]
            changes_made += 1
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 4: –ü–†–ò–í–Ø–ó–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ö –ö–ù–û–ü–ö–ê–ú ==========
    print("\nüîß –ü—Ä–∏–≤—è–∑—ã–≤–∞—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–Ω–æ–ø–∫–∞–º...")
    
    button_bindings = [
        ('–ó–∞–≥—Ä—É–∑–∏—Ç—å Excel', 'onclick="document.getElementById(\'excel-upload\').click()"'),
        ('–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel', 'onclick="exportToExcel(\'all\')"'),
        ('–≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'onclick="exportToExcel(\'all\')"'),
        ('–ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'onclick="document.getElementById(\'import-settings\').click()"'),
        ('–û–±—Ä–∞–±–æ—Ç–∞—Ç—å email –æ—á–µ—Ä–µ–¥—å', 'onclick="processEmailQueue()"'),
        ('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ü–æ–∏—Å–∫-–ú–æ—Ä–µ', 'onclick="syncWithPoiskMore()"'),
        ('–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ', 'onclick="generateTestData()"'),
        ('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã', 'onclick="checkSystem()"'),
        ('–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–π —Å–∏–≥–Ω–∞–ª', 'onclick="simulateIncomingSignal()"'),
        ('–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF', 'onclick="exportReportToPDF()"'),
        ('–°—É—Ç–æ—á–Ω—ã–π –æ—Ç—á—ë—Ç', 'onclick="generateReport(\'daily\')"'),
        ('–°—É—Ç–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç', 'onclick="generateReport(\'daily\')"'),
        ('–ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç', 'onclick="generateReport(\'weekly\')"'),
        ('–ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç', 'onclick="generateReport(\'weekly\')"'),
        ('–ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç', 'onclick="generateReport(\'monthly\')"'),
        ('–ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç', 'onclick="generateReport(\'monthly\')"'),
    ]
    
    for button_text, handler in button_bindings:
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —Ç–µ–∫—Å—Ç—É
        pattern = rf'(<button[^>]*>[^<]*{re.escape(button_text)}[^<]*</button>)'
        matches = list(re.finditer(pattern, content, re.IGNORECASE | re.DOTALL))
        
        for match in matches:
            button_html = match.group(0)
            if 'onclick' not in button_html:
                # –î–æ–±–∞–≤–ª—è–µ–º onclick
                new_button = button_html.replace('<button', f'<button {handler}')
                content = content.replace(button_html, new_button)
                changes_made += 1
                print(f"  ‚úì –ü—Ä–∏–≤—è–∑–∞–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è '{button_text}'")
    
    # ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 5: –î–û–ë–ê–í–õ–Ø–ï–ú –°–ö–†–´–¢–´–ï INPUT –î–õ–Ø –ó–ê–ì–†–£–ó–ö–ò –§–ê–ô–õ–û–í ==========
    print("\nüîß –î–æ–±–∞–≤–ª—è—é —Å–∫—Ä—ã—Ç—ã–µ input —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...")
    
    hidden_inputs = '''
    <!-- –°–∫—Ä—ã—Ç—ã–µ input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ -->
    <input type="file" id="excel-upload" style="display:none" accept=".xlsx,.xls" onchange="handleExcelUpload(this, 'auto')">
    <input type="file" id="import-settings" style="display:none" accept=".json,.xlsx" onchange="handleExcelUpload(this, 'settings')">
    '''
    
    if 'id="excel-upload"' not in content:
        body_close = content.rfind('</body>')
        if body_close > 0:
            content = content[:body_close] + hidden_inputs + '\n' + content[body_close:]
            changes_made += 1
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–∫—Ä—ã—Ç—ã–µ input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...")
    with open(index_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –í–Ω–µ—Å–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {changes_made}")
    print(f"üìù –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {backup_path}")
    
    return True

if __name__ == "__main__":
    try:
        success = fix_click_handlers()
        if success:
            print("\nüéâ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
            print("  1. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            print("  2. ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            print("  3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫")
            print("  4. ‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω—ã —Å–æ–±—ã—Ç–∏—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º")
            print("  5. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–∫—Ä—ã—Ç—ã–µ input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
            print("\nüí° –¢–µ–ø–µ—Ä—å:")
            print("  - –í—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ –≤–∫–ª–∞–¥–∫–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å")
            print("  - –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏")
            print("  - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")
            print("\n‚ö†Ô∏è  –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)")
        else:
            print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞")
            sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)