<!-- Восстановлено 2025-09-10 03:45:35 by etalon_restore_fix.py -->
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Модуль ТЕСТ ССТО - Система управления тестированием</title>
    
    <!-- OpenLayers для карты -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@v7.3.0/ol.css">
    <script src="https://cdn.jsdelivr.net/npm/ol@v7.3.0/dist/ol.js"></script>
    
    <!-- XLSX для работы с Excel -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
    
    <!-- jsPDF для генерации PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <!-- Поддержка кириллицы для PDF -->
    
    
    <!-- XLSX для работы с Excel -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
    
    <!-- jsPDF для генерации PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <!-- Поддержка кириллицы для PDF -->
    
    
    <style>
        /* ===== БАЗОВЫЕ СТИЛИ ===== */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            padding: 20px 0;
            position: sticky;
            top: 0;
            z-index: 1000;
        }
        
        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .logo-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
        }
        
        .logo-text h1 {
            font-size: 24px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 2px;
        }
        
        .logo-text p {
            font-size: 12px;
            color: #666;
        }
        
        .header-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: 0.3s;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }
        
        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .navigation {
            background: white;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            margin: 20px auto;
            max-width: 1400px;
            border-radius: 10px;
            padding: 10px;
        }
        
        .tabs {
            display: flex;
            gap: 5px;
            flex-wrap: wrap;
        }
        
        .tab {
            padding: 10px 20px;
            background: transparent;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            color: #4a5568;
            transition: 0.3s;
        }
        
        .tab:hover {
            background: #f7fafc;
        }
        
        .tab.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }
        
        .content-area {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        .tab-content {
            display: none;
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            animation: fadeIn 0.3s ease;
        }
        
        .tab-content.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .stat-card h3 {
            font-size: 14px;
            opacity: 0.9;
            margin-bottom: 10px;
        }
        
        .stat-card .value {
            font-size: 36px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .stat-card .change {
            font-size: 14px;
            opacity: 0.9;
        }
        
        /* Формы */
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #4a5568;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 16px;
            transition: 0.3s;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .form-group.highlight {
            background: #fff3cd;
            border: 3px solid #ff6b6b;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .form-group.highlight label {
            color: #d32f2f;
            font-size: 18px;
            font-weight: bold;
        }
        
        .form-group.highlight input {
            font-size: 20px;
            font-weight: bold;
            border: 3px solid #ff6b6b;
        }
        
        /* Таблицы */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        th {
            background: #f7fafc;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #4a5568;
            border-bottom: 2px solid #e2e8f0;
        }
        
        td {
            padding: 12px;
            border-bottom: 1px solid #e2e8f0;
        }
        
        tr:hover {
            background: #f7fafc;
        }
        
        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }
        
        .status-confirmed {
            background: #d1fae5;
            color: #065f46;
        }
        
        .status-active {
            background: #dbeafe;
            color: #1e40af;
        }
        
        /* Карта */
        #map {
            height: 500px;
            border-radius: 10px;
            margin-top: 20px;
        }
        
        .map-controls {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        /* Модальные окна */
        .modal {
            display: none;
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            animation: fadeIn 0.3s;
        }
        
        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .modal-content {
            background: white;
            border-radius: 15px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 24px;
            font-weight: bold;
            color: #2d3748;
        }
        
        .modal-close {
            font-size: 30px;
            color: #a0aec0;
            cursor: pointer;
            background: none;
            border: none;
        }
        
        .modal-close:hover {
            color: #4a5568;
        }
        
        /* Уведомления */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            z-index: 3000;
            animation: slideIn 0.3s;
        }
        
        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
        
        .notification.success {
            background: #48bb78;
        }
        
        .notification.error {
            background: #f56565;
        }
        
        .notification.info {
            background: #4299e1;
        }
        
        /* Скрытый input для загрузки файлов */
        #excel-upload {
            display: none;
        }
    
        .status-badge { 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-size: 0.8em; 
            display: inline-block;
        }
        .status-active { 
            background: #d4edda; 
            color: #155724; 
        }
        .status-inactive { 
            background: #f8d7da; 
            color: #721c24; 
        }
        .status-tested { 
            background: #c7f3c7; 
            color: #0d5f0d; 
        }
        .status-pending { 
            background: #fff3cd; 
            color: #856404; 
        }</style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <div class="logo">
                <div class="logo-icon">🚢</div>
                <div class="logo-text">
                    <h1>МОДУЛЬ ТЕСТ ССТО</h1>
                    <p>Система управления тестированием ССТО</p>
                </div>
            </div>
            <div class="header-actions">
                <button class="btn btn-primary" onclick="window.excelLoader.openFileDialog()">📊 Загрузить Excel</button>
                <button class="btn btn-secondary" onclick="window.emailSender.configureSMTP()">✉️ Настройки Email</button>
                <button class="btn btn-secondary" onclick="exportSettings()">💾 Экспорт настроек</button>
                <button class="btn btn-secondary" onclick="importSettings()">📥 Импорт настроек</button>
            </div>
        </div>
    </div>
    
    <div class="navigation">
        <div class="tabs">
            <button class="tab active" onclick="switchTab('dashboard', this)">📊 Главная</button>
            <button class="tab" onclick="switchTab('new-request', this)">➕ Новая заявка</button>
            <button class="tab" onclick="switchTab('requests', this)">📋 Заявки</button>
            <button class="tab" onclick="switchTab('signals', this)">📡 Сигналы</button>
            <button class="tab" onclick="switchTab('terminals', this)">🖥️ Терминалы</button>
            <button class="tab" onclick="switchTab('map-container', this)">🗺️ Карта</button>
            <button class="tab" onclick="switchTab('reports', this)">📈 Отчёты</button>
        </div>
    </div>
    
    <div class="content-area">
        <!-- Главная -->
        <div id="dashboard" class="tab-content active">
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>АКТИВНЫЕ ЗАЯВКИ</h3>
                    <div class="value" id="total-requests">0</div>
                    <div class="change">↑ +2 за сегодня</div>
                </div>
                <div class="stat-card">
                    <h3>ОЖИДАЮТ ПОДТВЕРЖДЕНИЯ</h3>
                    <div class="value" id="pending-requests">0</div>
                    <div class="change">Требуют внимания</div>
                </div>
                <div class="stat-card">
                    <h3>ПОДТВЕРЖДЕНО</h3>
                    <div class="value" id="confirmed-requests">0</div>
                    <div class="change">↑ +5 за неделю</div>
                </div>
                <div class="stat-card">
                    <h3>ВСЕГО СИГНАЛОВ</h3>
                    <div class="value" id="total-signals">0</div>
                    <div class="change">За текущий месяц</div>
                </div>
            </div>
            
            <div style="background: #e6fffa; border: 2px solid #38b2ac; border-radius: 10px; padding: 20px; margin-bottom: 20px;">
                <h3 style="color: #234e52; margin-bottom: 10px;">Статус автоподтверждения</h3>
                <p>Режим: <strong id="auto-confirm-status">ОТКЛЮЧЕН</strong></p>
                <button class="btn btn-primary" onclick="toggleAutoConfirm()">Изменить режим</button>
            </div>
            
            <div class="map-controls">
                <button class="btn btn-primary" onclick="processEmailQueue()">📧 Обработать email очередь</button>
                <button class="btn btn-primary" onclick="syncWithPoiskMore()">🔄 Синхронизация с Поиск-Море</button>
                <button class="btn btn-secondary" onclick="generateTestData()">🎲 Генерировать тестовые данные</button>
                <button class="btn btn-secondary" onclick="systemHealthCheck()">🏥 Проверка системы</button>
            </div>
        </div>
        
        <!-- Новая заявка -->
        <div id="new-request" class="tab-content">
            <h2>Создание новой заявки на тестирование ССТО</h2>
            <form id="request-form">
                <div class="form-group highlight">
                    <label>⚠️ НОМЕР СТОЙКИ ССТО (ГЛАВНЫЙ ИДЕНТИФИКАТОР) *</label>
                    <input type="text" id="station-number" name="station-number" required pattern="[0-9]{9}" 
                           placeholder="Например: 427309676" maxlength="9">
                    <small style="color: #d32f2f;">КРИТИЧЕСКИ ВАЖНО: Уникальный номер терминала - единственный идентификатор для сопоставления</small>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                    <div class="form-group">
                        <label>Тип спутниковой связи *</label>
                        <div>
                            <label><input type="radio" name="satcom-type" value="INMARSAT" checked> ИНМАРСАТ</label>
                            <label><input type="radio" name="satcom-type" value="IRIDIUM"> ИРИДИУМ</label>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label>Название судна *</label>
                        <input type="text" id="vessel-name" name="vessel-name" required>
                    </div>
                    
                    <div class="form-group">
                        <label>MMSI *</label>
                        <input type="text" id="mmsi" name="mmsi" required pattern="[0-9]{9}" maxlength="9">
                    </div>
                    
                    <div class="form-group">
                        <label>IMO</label>
                        <input type="text" id="imo" name="imo" pattern="[0-9]{7}" maxlength="7">
                    </div>
                    
                    <div class="form-group">
                        <label>Судовладелец *</label>
                        <input type="text" id="ship-owner" name="ship-owner" required>
                    </div>
                    
                    <div class="form-group">
                        <label>Email *</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    
                    <div class="form-group">
                        <label>Дата теста *</label>
                        <input type="date" id="test-date" name="test-date" required>
                    </div>
                    
                    <div class="form-group">
                        <label>Время теста</label>
                        <input type="time" id="test-time" name="test-time">
                    </div>
                </div>
                
                <button type="submit" class="btn btn-primary" style="margin-top: 20px;">Создать заявку</button>
            </form>
        </div>
        
        <!-- Заявки -->
        <div id="requests" class="tab-content">
            <h2>Список заявок на тестирование</h2>
            <table>
                <thead>
                    <tr>
                    <th>ID</th>
                    <th>Номер стойки</th>
                    <th>Судно</th>
                    <th>MMSI</th>
                    <th>IMO</th>
                    <th>Дата теста</th>
                    <th>Статус</th>
                    <th>Действия</th>
                </tr>
                </thead>
                <tbody id="requests-tbody">
                    <!-- Данные загружаются динамически -->
                </tbody>
            </table>
        </div>
        
        <!-- Сигналы -->
        <div id="signals" class="tab-content">
            <h2>Полученные сигналы ССТО</h2>
            <table>
                <thead>
                    <tr>
                    <th>ID</th>
                    <th>Номер стойки</th>
                    <th>Судно</th>
                    <th>MMSI</th>
                    <th>IMO</th>
                    <th>Тип</th>
                    <th>Время получения</th>
                    <th>Тест/Тревога</th>
                    <th>Действия</th>
                </tr>
                </thead>
                <tbody id="signals-tbody">
                    <!-- Данные загружаются динамически -->
                </tbody>
            </table>
        </div>
        
        <!-- Терминалы -->
        <div id="terminals" class="tab-content">
            <h2>База данных терминалов ССТО</h2>
            <div class="map-controls">
                <button class="btn btn-primary" onclick="addNewTerminal()">➕ Добавить терминал</button>
                <button class="btn btn-secondary" onclick="app.vesselDB.exportToCSV()">📥 Экспорт в CSV</button>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Номер стойки</th>
                        <th>Судно</th>
                        <th>MMSI</th>
                        <th>Тип связи</th>
                        <th>Владелец</th>
                        <th>Последний тест</th>
                        <th>Следующий тест</th>
                        <th>Статус</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tbody id="terminals-tbody">
                    <!-- Данные загружаются динамически -->
                </tbody>
            </table>
        </div>
        
        <!-- Карта -->
        <div id="map-container" class="tab-content">
            <h2>Карта сигналов ССТО</h2>
            <div id="map"></div>
            <div class="map-controls">
                <button class="btn btn-primary" onclick="window.mapManager.zoomToSignals()">🎯 Показать все</button>
                <button class="btn btn-primary" onclick="window.mapManager.measureDistance()">📏 Измерить</button>
                <button class="btn btn-secondary" onclick="window.mapManager.exportMapImage()">📷 Скриншот</button>
                <button class="btn btn-secondary" onclick="window.mapManager.clearMap()">🗑️ Очистить</button>
            </div>
        </div>
        
        <!-- Отчёты -->
        <div id="reports" class="tab-content">
            <h2>Генерация отчётов</h2>
            <div class="form-group">
                <label>Тип отчёта</label>
                <select id="report-type">
                    <option value="daily">Суточный</option>
                    <option value="weekly">Недельный</option>
                    <option value="monthly">Месячный</option>
                    <option value="custom">Произвольный период</option>
                </select>
            </div>
            <div class="map-controls">
                <button class="btn btn-primary" onclick="generateDailyReport()">📊 Суточный отчёт</button>
                <button class="btn btn-primary" onclick="generateWeeklyReport()">📊 Недельный отчёт</button>
                <button class="btn btn-primary" onclick="generateMonthlyReport()">📊 Месячный отчёт</button>
                <button class="btn btn-secondary" onclick="exportReportToPDF()">📄 Экспорт в PDF</button>
            </div>
            <div id="report-content" style="margin-top: 20px;">
                <!-- Содержимое отчёта -->
            </div>
        </div>
    </div>
    
    <!-- Скрытый input для загрузки Excel -->
    <input type="file" id="excel-upload" accept=".xlsx,.xls,.csv">
    
    <!-- Модальные окна будут создаваться динамически -->
    
    

<script>
// ===== CANONICAL CLEAN SCRIPT INSERTED BY etalon_restore_fix.py =====
(function () {
  'use strict';

  // Утилиты для уведомлений
  function showNotification(message, type) {
    type = type || 'info';
    var el = document.createElement('div');
    el.className = 'notification ' + type;
    el.textContent = message;
    el.style.cssText = 'position:fixed;top:20px;right:20px;padding:10px 20px;background:#10b981;color:white;border-radius:4px;z-index:9999;';
    if (type === 'error') el.style.background = '#ef4444';
    document.body.appendChild(el);
    setTimeout(function(){ el.remove(); }, 3000);
  }

  // Транслитерация для PDF
  function cyrillicToTranslit(text) {
    var map = {'а':'a','б':'b','в':'v','г':'g','д':'d','е':'e','ё':'e','ж':'zh','з':'z','и':'i','й':'y','к':'k',
               'л':'l','м':'m','н':'n','о':'o','п':'p','р':'r','с':'s','т':'t','у':'u','ф':'f','х':'h','ц':'ts',
               'ч':'ch','ш':'sh','щ':'sch','ъ':'','ы':'y','ь':'','э':'e','ю':'yu','я':'ya',
               'А':'A','Б':'B','В':'V','Г':'G','Д':'D','Е':'E','Ё':'E','Ж':'Zh','З':'Z','И':'I','Й':'Y','К':'K',
               'Л':'L','М':'M','Н':'N','О':'O','П':'P','Р':'R','С':'S','Т':'T','У':'U','Ф':'F','Х':'H','Ц':'Ts',
               'Ч':'Ch','Ш':'Sh','Щ':'Sch','Ъ':'','Ы':'Y','Ь':'','Э':'E','Ю':'Yu','Я':'Ya'};
    return String(text || '').split('').map(function(ch){ return map[ch] || ch; }).join('');
  }

  // LocalStorage хранилище
  var LS_KEYS = { 
    requests: 'testRequests', 
    signals: 'signals', 
    terminals: 'vessels' 
  };
  
  var store = {
    _get: function(k){ 
      try { 
        return JSON.parse(localStorage.getItem(k) || '[]'); 
      } catch(_){ 
        return []; 
      } 
    },
    _set: function(k,v){ 
      localStorage.setItem(k, JSON.stringify(v || [])); 
    },
    get: function(kind){ 
      return this._get(LS_KEYS[kind]); 
    },
    set: function(kind,arr){ 
      this._set(LS_KEYS[kind], arr); 
    }
  };

  // Состояние приложения
  var app = { 
    currentTab: 'dashboard', 
    autoConfirm: localStorage.getItem('autoConfirm') === 'true' 
  };
  window.app = app;

  // Excel загрузчик
  window.uploadExcel = function(){
    var input = document.createElement('input');
    input.type = 'file';
    input.accept = '.xlsx,.xls';
    input.onchange = function(e){
      var f = e.target.files[0]; 
      if (!f) return;
      
      var reader = new FileReader();
      reader.onload = function(ev){
        try{
          var wb = XLSX.read(ev.target.result, {type:'binary'});
          var sheet = wb.SheetNames[0];
          var data = XLSX.utils.sheet_to_json(wb.Sheets[sheet]);
          var terminals = store.get('terminals');
          
          data.forEach(function(row){
            var nr = String(row['Номер стойки'] || row['Station Number'] || row['terminal_number'] || '').trim();
            if (!nr) return;
            
            var t = {
              id: 'T' + Date.now() + Math.random().toString(36).slice(2,6),
              terminal_number: nr,
              vessel_name: row['Судно'] || row['Vessel'] || row['vessel_name'] || '',
              mmsi: row['MMSI'] || '',
              terminal_type: row['Тип связи'] || row['Type'] || 'INMARSAT',
              owner: row['Владелец'] || row['Owner'] || '',
              lastTest: row['Последний тест'] || row['Last Test'] || '',
              status: 'active'
            };
            
            var idx = terminals.findIndex(function(x){ 
              return x.terminal_number === t.terminal_number; 
            });
            
            if (idx >= 0) {
              terminals[idx] = Object.assign({}, terminals[idx], t);
            } else {
              terminals.push(t);
            }
          });
          
          store.set('terminals', terminals);
          showNotification('Excel загружен: ' + data.length + ' записей', 'success');
          loadTerminals();
          loadDashboard();
        } catch(err){ 
          console.error(err); 
          showNotification('Ошибка чтения Excel', 'error'); 
        }
      };
      reader.readAsBinaryString(f);
    };
    input.click();
  };

  // Переключение вкладок
  window.switchTab = function(tabName, btn){
    // Скрываем все вкладки
    Array.prototype.forEach.call(document.querySelectorAll('.content'), function(x){ 
      x.classList.remove('active'); 
    });
    
    // Показываем нужную
    var target = document.getElementById(tabName); 
    if (target) {
      target.classList.add('active');
    }
    
    // Обновляем кнопки
    Array.prototype.forEach.call(document.querySelectorAll('.tab'), function(x){ 
      x.classList.remove('active'); 
    });
    
    if (btn && btn.classList) {
      btn.classList.add('active');
    } else {
      // Если кнопка не передана, ищем по data-tab
      var tabBtn = document.querySelector('.tab[data-tab="' + tabName + '"]');
      if (tabBtn) tabBtn.classList.add('active');
    }
    
    app.currentTab = tabName;
    
    // Обновляем карту при необходимости
    if (tabName === 'map' && window.olMap) {
      setTimeout(function(){ 
        window.olMap.updateSize(); 
      }, 100);
    }
  };

  // Генерация тестовых данных
  window.generateTestData = function(){
    // Добавляем тестовый сигнал
    var signals = store.get('signals');
    signals.push({ 
      id: 'SIG-' + Date.now(), 
      terminal: '427309676',
      stationNumber: '427309676', 
      vessel: 'Test Vessel',
      mmsi: '273456789', 
      type: 'INMARSAT', 
      coordinates: {lat: 55.8, lon: 37.6}, 
      received: new Date().toISOString(),
      receivedAt: new Date().toISOString(), 
      isTest: true 
    });
    store.set('signals', signals);
    
    // Добавляем тестовую заявку
    var requests = store.get('requests');
    requests.push({
      id: 'REQ-' + Date.now(),
      terminal: '427309676',
      stationNumber: '427309676',
      vessel: 'Test Vessel',
      vesselName: 'Test Vessel',
      mmsi: '273456789',
      testDate: new Date().toISOString().split('T')[0],
      status: 'pending'
    });
    store.set('requests', requests);
    
    // Добавляем тестовый терминал
    var terminals = store.get('terminals');
    var existingIndex = terminals.findIndex(function(t){
      return t.terminal_number === '427309676';
    });
    
    if (existingIndex < 0) {
      terminals.push({
        id: 'T-' + Date.now(),
        terminal_number: '427309676',
        vessel_name: 'Test Vessel',
        mmsi: '273456789',
        terminal_type: 'INMARSAT',
        owner: 'Test Owner',
        lastTest: new Date().toISOString().split('T')[0],
        status: 'tested'
      });
      store.set('terminals', terminals);
    }
    
    showNotification('Тестовые данные добавлены', 'success');
    loadDashboard();
    loadRequests();
    loadSignals();
    loadTerminals();
  };

  // Обновление счетчиков на главной
  window.loadDashboard = function(){
    var req = store.get('requests');
    var sig = store.get('signals');
    var ter = store.get('terminals');
    
    var setText = function(id, val){ 
      var el = document.getElementById(id); 
      if (el) el.textContent = String(val); 
    };
    
    setText('active-requests', req.length);
    setText('pending-confirm', req.filter(function(r){ return r.status === 'pending'; }).length);
    setText('confirmed', req.filter(function(r){ return r.status === 'confirmed'; }).length);
    setText('total-signals', sig.length);
    
    var auto = document.getElementById('auto-confirm-status');
    if (auto) { 
      auto.textContent = app.autoConfirm ? 'ВКЛЮЧЕН' : 'ОТКЛЮЧЕН'; 
      auto.style.color = app.autoConfirm ? '#065f46' : '#991b1b'; 
    }
  };

  // Загрузка заявок
  window.loadRequests = function(){ 
    var rows = store.get('requests'); 
    var tbody = document.getElementById('requests-tbody'); 
    if (!tbody) return; 
    
    tbody.innerHTML = '';
    
    if (rows.length === 0) {
      tbody.innerHTML = '<tr><td colspan="8" style="text-align:center;color:#888;padding:16px;">Нет активных заявок</td></tr>';
    } else {
      rows.forEach(function(r){ 
        var tr = document.createElement('tr'); 
        tr.innerHTML = '<td>' + (r.id || '') + '</td>' +
                      '<td><strong>' + (r.terminal || r.stationNumber || '') + '</strong></td>' +
                      '<td>' + (r.vessel || r.vesselName || '') + '</td>' +
                      '<td>' + (r.mmsi || '') + '</td>' +
                      '<td>' + (r.imo || '') + '</td>' +
                      '<td>' + (r.testDate || '') + '</td>' +
                      '<td><span class="status-badge status-' + (r.status || 'pending') + '">' + (r.status || 'pending') + '</span></td>' +
                      '<td><button class="btn btn-primary btn-sm" onclick="confirmRequest(\'' + r.id + '\')">Подтвердить</button></td>'; 
        tbody.appendChild(tr); 
      }); 
    }
  };
  
  // Загрузка сигналов
  window.loadSignals = function(){ 
    var rows = store.get('signals'); 
    var tbody = document.getElementById('signals-tbody'); 
    if (!tbody) return; 
    
    tbody.innerHTML = '';
    
    if (rows.length === 0) {
      tbody.innerHTML = '<tr><td colspan="9" style="text-align:center;color:#888;padding:16px;">Нет полученных сигналов</td></tr>';
    } else {
      rows.forEach(function(s){ 
        var tr = document.createElement('tr'); 
        tr.innerHTML = '<td>' + (s.id || '-') + '</td>' +
                      '<td><strong>' + (s.terminal || s.stationNumber || '-') + '</strong></td>' +
                      '<td>' + (s.vessel || s.vesselName || '-') + '</td>' +
                      '<td>' + (s.mmsi || '-') + '</td>' +
                      '<td>' + (s.imo || '-') + '</td>' +
                      '<td><span class="status-badge">' + (s.type || '-') + '</span></td>' +
                      '<td>' + (s.received || s.receivedAt || s.positionTime || '') + '</td>' +
                      '<td>' + (s.isTest ? '<span class="status-badge status-tested">Тест</span>' : '<span class="status-badge status-active">Рабочий</span>') + '</td>' +
                      '<td><button class="btn btn-primary btn-sm" onclick="matchSignal(\'' + s.id + '\')">Сопоставить</button></td>'; 
        tbody.appendChild(tr); 
      }); 
    }
  };
  
  // Загрузка терминалов
  window.loadTerminals = function(){ 
    var rows = store.get('terminals'); 
    var tbody = document.getElementById('terminals-tbody'); 
    if (!tbody) return; 
    
    tbody.innerHTML = '';
    
    if (rows.length === 0) {
      tbody.innerHTML = '<tr><td colspan="9" style="text-align:center;color:#888;padding:16px;">Нет терминалов</td></tr>';
    } else {
      rows.forEach(function(t){ 
        // Определяем статус на русском
        var statusText = 'Активен';
        var statusClass = 'status-active';
        
        if (t.status === 'inactive') {
          statusText = 'Неактивен';
          statusClass = 'status-inactive';
        } else if (t.status === 'tested') {
          statusText = 'Протестирован';
          statusClass = 'status-tested';
        } else if (t.status === 'pending') {
          statusText = 'Ожидает теста';
          statusClass = 'status-pending';
        }
        
        // Вычисляем следующий тест
        var nextTest = '';
        if (t.lastTest) {
          try {
            var lastDate = new Date(t.lastTest);
            if (!isNaN(lastDate.getTime())) {
              var nextDate = new Date(lastDate);
              nextDate.setFullYear(nextDate.getFullYear() + 1);
              nextTest = nextDate.toISOString().split('T')[0];
            }
          } catch(e) {}
        }
        
        var tr = document.createElement('tr'); 
        tr.innerHTML = '<td>' + (t.terminal_number || '') + '</td>' +
                      '<td>' + (t.vessel_name || '') + '</td>' +
                      '<td>' + (t.mmsi || '') + '</td>' +
                      '<td>' + (t.terminal_type || 'INMARSAT') + '</td>' +
                      '<td>' + (t.owner || '') + '</td>' +
                      '<td>' + (t.lastTest || '') + '</td>' +
                      '<td>' + nextTest + '</td>' +
                      '<td><span class="status-badge ' + statusClass + '">' + statusText + '</span></td>' +
                      '<td>' +
                        '<button class="btn btn-primary btn-sm" onclick="viewTerminal(\'' + (t.id || t.terminal_number) + '\')">Просмотр</button> ' +
                        '<button class="btn btn-success btn-sm" onclick="testTerminal(\'' + t.terminal_number + '\')">Тест</button>' +
                      '</td>'; 
        tbody.appendChild(tr); 
      }); 
    }
  };

  // Функции действий
  window.confirmRequest = function(id){
    var requests = store.get('requests');
    var req = requests.find(function(r){ return r.id === id; });
    if (req) {
      req.status = 'confirmed';
      store.set('requests', requests);
      loadRequests();
      loadDashboard();
      showNotification('Заявка подтверждена', 'success');
    }
  };
  
  window.matchSignal = function(id){
    showNotification('Сопоставление сигнала ' + id, 'info');
  };
  
  window.viewTerminal = function(id){ 
    showNotification('Просмотр терминала ' + id, 'info'); 
  };
  
  window.testTerminal = function(terminalNumber){
    var signals = store.get('signals');
    signals.push({
      id: 'SIG-TEST-' + Date.now(),
      terminal: terminalNumber,
      type: 'TEST',
      received: new Date().toISOString(),
      isTest: true
    });
    store.set('signals', signals);
    
    var terminals = store.get('terminals');
    var terminal = terminals.find(function(t){ return t.terminal_number === terminalNumber; });
    if (terminal) {
      terminal.lastTest = new Date().toISOString().split('T')[0];
      terminal.status = 'tested';
      store.set('terminals', terminals);
    }
    
    loadTerminals();
    loadSignals();
    loadDashboard();
    showNotification('Тестовый сигнал отправлен', 'success');
  };
  
  // Функции-заглушки для остальных кнопок
  window.configureEmail = function(){ showNotification('Настройки Email в разработке', 'info'); };
  window.exportSettings = function(){ showNotification('Экспорт настроек в разработке', 'info'); };
  window.importSettings = function(){ showNotification('Импорт настроек в разработке', 'info'); };
  window.processEmailQueue = function(){ showNotification('Обработка email в разработке', 'info'); };
  window.syncSearchSea = function(){ showNotification('Синхронизация в разработке', 'info'); };
  window.systemCheck = function(){ showNotification('Проверка системы в разработке', 'info'); };
  window.toggleAutoConfirm = function(){ 
    app.autoConfirm = !app.autoConfirm;
    localStorage.setItem('autoConfirm', app.autoConfirm);
    loadDashboard();
    showNotification('Автоподтверждение ' + (app.autoConfirm ? 'включено' : 'отключено'), 'info');
  };
  window.addTerminal = function(){ showNotification('Добавление терминала в разработке', 'info'); };
  window.exportTerminalsCSV = function(){ showNotification('Экспорт в CSV в разработке', 'info'); };
  window.viewRequest = function(id){ showNotification('Просмотр заявки ' + id, 'info'); };
  window.viewSignal = function(id){ showNotification('Просмотр сигнала ' + id, 'info'); };
  window.showAllSignals = function(){ showNotification('Показать все сигналы', 'info'); };
  window.measureDistance = function(){ showNotification('Измерение расстояния', 'info'); };
  window.takeScreenshot = function(){ showNotification('Скриншот карты', 'info'); };
  window.clearMap = function(){ showNotification('Очистка карты', 'info'); };
  window.generateReport = function(){ showNotification('Генерация отчёта', 'info'); };
  window.exportPDF = function(){ showNotification('Экспорт в PDF', 'info'); };

  // Инициализация карты
  window.initMap = function(){
    if (window.olMap) return;
    
    var mapEl = document.getElementById('map');
    if (!mapEl) return;
    
    window.olMap = new ol.Map({
      target: 'map',
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        })
      ],
      view: new ol.View({
        center: ol.proj.fromLonLat([37.6173, 55.7558]),
        zoom: 4
      })
    });
  };

  // Обработчики событий при загрузке страницы
  document.addEventListener('DOMContentLoaded', function(){ 
    // Инициализация данных
    loadDashboard(); 
    loadRequests(); 
    loadSignals(); 
    loadTerminals();
    
    // Обработчики для вкладок
    document.querySelectorAll('.tab').forEach(function(tab){
      tab.addEventListener('click', function(e){
        e.preventDefault();
        var targetId = this.getAttribute('data-tab');
        if (targetId) {
          switchTab(targetId, this);
        }
      });
    });
    
    // Обработчик для формы новой заявки
    var form = document.getElementById('new-request-form');
    if (form) {
      form.addEventListener('submit', function(e){
        e.preventDefault();
        
        var request = {
          id: 'REQ' + Date.now(),
          terminal: document.getElementById('terminal-number').value,
          satType: document.getElementById('sat-type').value,
          vessel: document.getElementById('vessel-name').value,
          mmsi: document.getElementById('mmsi').value,
          imo: document.getElementById('imo').value,
          owner: document.getElementById('owner').value,
          email: document.getElementById('email').value,
          testDate: document.getElementById('test-date').value,
          testTime: document.getElementById('test-time').value,
          status: 'pending'
        };
        
        var requests = store.get('requests');
        requests.push(request);
        store.set('requests', requests);
        
        showNotification('Заявка создана', 'success');
        form.reset();
        loadDashboard();
        loadRequests();
      });
    }
    
    // Активируем первую вкладку
    switchTab('dashboard');
  });
})();
</script>

</body>
</html>