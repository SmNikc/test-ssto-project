#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –í–°–ï–• –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–∞—à–±–æ—Ä–¥–∞
–ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: C:\Projects\test-ssto-project\fix_all_dashboard_functions.py
"""

import re
import os
from datetime import datetime

def fix_all_dashboard_functions():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–∞—à–±–æ—Ä–¥–∞"""
    
    file_path = r'C:\Projects\test-ssto-project\index_14_36.html'
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
        content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = f"{file_path}.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    
    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π - –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è app –∏–ª–∏ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º </script>
    insert_position = None
    
    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è app
    app_pattern = r'const app = \{[^}]*\};\s*'
    app_match = re.search(app_pattern, content)
    
    if app_match:
        insert_position = app_match.end()
        print("‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ app, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ")
    else:
        # –ò—â–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π </script>
        script_pattern = r'<script[^>]*>(?:(?!</script>).)*'
        script_matches = list(re.finditer(script_pattern + r'</script>', content, re.DOTALL))
        if script_matches:
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤
            last_script = script_matches[-1]
            insert_position = last_script.end() - len('</script>')
            print("‚úÖ –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–Ω–µ—Ü")
    
    if not insert_position:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π")
        return
    
    # –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞
    dashboard_functions = """

// ============= –§–£–ù–ö–¶–ò–ò –î–ê–®–ë–û–†–î–ê –ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• =============

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞
function loadDashboard() {
    console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞...');
    
    const requests = JSON.parse(localStorage.getItem('testRequests') || '[]');
    const signals = JSON.parse(localStorage.getItem('signals') || '[]');
    const terminals = JSON.parse(localStorage.getItem('ssasTerminals') || localStorage.getItem('terminals') || localStorage.getItem('vessels') || '[]');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const totalRequestsEl = document.getElementById('total-requests');
    const pendingRequestsEl = document.getElementById('pending-requests');
    const confirmedRequestsEl = document.getElementById('confirmed-requests');
    const totalSignalsEl = document.getElementById('total-signals');
    
    if (totalRequestsEl) {
        totalRequestsEl.textContent = requests.length;
    }
    if (pendingRequestsEl) {
        pendingRequestsEl.textContent = requests.filter(r => r.status === 'pending').length;
    }
    if (confirmedRequestsEl) {
        confirmedRequestsEl.textContent = requests.filter(r => r.status === 'confirmed').length;
    }
    if (totalSignalsEl) {
        totalSignalsEl.textContent = signals.length;
    }
    
    console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ó–∞—è–≤–∫–∏=${requests.length}, –û–∂–∏–¥–∞—é—Ç=${requests.filter(r => r.status === 'pending').length}, –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ=${requests.filter(r => r.status === 'confirmed').length}, –°–∏–≥–Ω–∞–ª—ã=${signals.length}`);
}

// –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏
function updateDashboardData() {
    console.log('üîÑ updateDashboardData –≤—ã–∑–≤–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ loadDashboard');
    loadDashboard();
}

// –ï—â–µ –æ–¥–∏–Ω –∞–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function updateStats() {
    console.log('üìä updateStats –≤—ã–∑–≤–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ loadDashboard');
    loadDashboard();
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É
function loadRequests() {
    console.log('üìã –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...');
    
    const requests = JSON.parse(localStorage.getItem('testRequests') || '[]');
    const tbody = document.getElementById('requests-tbody');
    
    if (tbody) {
        tbody.innerHTML = '';
        
        if (requests.length === 0) {
            tbody.innerHTML = '<tr><td colspan="7" style="text-align: center; padding: 20px;">–ù–µ—Ç –∑–∞—è–≤–æ–∫</td></tr>';
        } else {
            requests.forEach(request => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${request.id || 'N/A'}</td>
                    <td>${request.stationNumber || ''}</td>
                    <td>${request.vesselName || ''}</td>
                    <td>${request.mmsi || ''}</td>
                    <td>${request.testDate || ''}</td>
                    <td><span class="status-badge">${request.status || 'pending'}</span></td>
                    <td><button class="btn btn-sm" onclick="viewRequest('${request.id}')">–ü—Ä–æ—Å–º–æ—Ç—Ä</button></td>
                `;
                tbody.appendChild(row);
            });
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫
    loadDashboard();
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É
function loadSignals() {
    console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...');
    
    const signals = JSON.parse(localStorage.getItem('signals') || '[]');
    const tbody = document.getElementById('signals-tbody');
    
    if (tbody) {
        tbody.innerHTML = '';
        
        if (signals.length === 0) {
            tbody.innerHTML = '<tr><td colspan="8" style="text-align: center; padding: 20px;">–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤</td></tr>';
        } else {
            signals.forEach(signal => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${signal.id || 'N/A'}</td>
                    <td>${signal.stationNumber || ''}</td>
                    <td>${signal.vesselName || ''}</td>
                    <td>${signal.mmsi || ''}</td>
                    <td>${signal.receivedAt || signal.positionTime || ''}</td>
                    <td>${signal.signalType || signal.type || ''}</td>
                    <td><span class="status-badge">${signal.status || 'new'}</span></td>
                    <td><button class="btn btn-sm" onclick="viewSignal('${signal.id}')">–ü—Ä–æ—Å–º–æ—Ç—Ä</button></td>
                `;
                tbody.appendChild(row);
            });
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    loadDashboard();
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É
function loadTerminals() {
    console.log('üö¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤...');
    
    const terminals = JSON.parse(localStorage.getItem('ssasTerminals') || localStorage.getItem('terminals') || localStorage.getItem('vessels') || '[]');
    const tbody = document.getElementById('terminals-tbody');
    
    if (tbody) {
        tbody.innerHTML = '';
        
        if (terminals.length === 0) {
            tbody.innerHTML = '<tr><td colspan="7" style="text-align: center; padding: 20px;">–ù–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤</td></tr>';
        } else {
            terminals.forEach(terminal => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${terminal.terminal_number || terminal.stationNumber || ''}</td>
                    <td>${terminal.vessel_name || terminal.vesselName || terminal.name || ''}</td>
                    <td>${terminal.mmsi || ''}</td>
                    <td>${terminal.terminal_type || terminal.terminalType || terminal.type || 'INMARSAT'}</td>
                    <td>${terminal.owner || ''}</td>
                    <td><span class="status-badge">${terminal.status || 'active'}</span></td>
                    <td><button class="btn btn-sm" onclick="viewTerminal('${terminal.id}')">–ü—Ä–æ—Å–º–æ—Ç—Ä</button></td>
                `;
                tbody.appendChild(row);
            });
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤
    loadDashboard();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function viewRequest(id) {
    console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–∫–∏:', id);
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
}

function viewSignal(id) {
    console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∏–≥–Ω–∞–ª–∞:', id);
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
}

function viewTerminal(id) {
    console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ—Ä–º–∏–Ω–∞–ª–∞:', id);
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
}

// ============= –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –î–ê–®–ë–û–†–î–ê =============

"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –µ—Å—Ç—å
    existing_functions = []
    missing_functions = []
    
    functions_to_check = [
        'loadDashboard',
        'updateDashboardData',
        'updateStats',
        'loadRequests',
        'loadSignals',
        'loadTerminals'
    ]
    
    for func_name in functions_to_check:
        if f'function {func_name}' in content:
            existing_functions.append(func_name)
        else:
            missing_functions.append(func_name)
    
    print(f"\nüìã –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–π:")
    print(f"  ‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ: {existing_functions}")
    print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ: {missing_functions}")
    
    if missing_functions:
        # –í—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
        content = content[:insert_position] + dashboard_functions + content[insert_position:]
        print(f"\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞")
    else:
        print(f"\n‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"\n‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {file_path}")
    print("\nüéØ –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadDashboard()")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è updateDashboardData()")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è updateStats()")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadRequests()")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadSignals()")
    print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadTerminals()")
    print("\n‚ö†Ô∏è –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5) –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å Excel —Ñ–∞–π–ª")

if __name__ == "__main__":
    fix_all_dashboard_functions()
    print("\n‚ú® –ì–æ—Ç–æ–≤–æ!")