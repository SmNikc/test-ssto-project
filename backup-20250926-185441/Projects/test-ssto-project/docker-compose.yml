version: '3.8'

services:
  # PostgreSQL База данных
  postgres:
    image: postgres:14-alpine
    container_name: ssto-postgres
    environment:
      POSTGRES_DB: sstodb
      POSTGRES_USER: ssto
      POSTGRES_PASSWORD: sstopass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./test_data.sql:/docker-entrypoint-initdb.d/test_data.sql
    networks:
      - ssto-network

  # Keycloak (опционально)
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: ssto-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ssto
      KC_DB_PASSWORD: sstopass
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - ssto-network

  # Backend NestJS
  backend:
    build: ./backend-nest
    container_name: ssto-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ssto
      DB_PASSWORD: sstopass
      DB_NAME: sstodb
      SIMPLE_AUTH_MODE: ${SIMPLE_AUTH_MODE:-true}
      KEYCLOAK_URL: http://keycloak:8080/realms/ssto
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend-nest:/app
      - /app/node_modules
    networks:
      - ssto-network
    command: npm run start:prod

  # Frontend React
  frontend:
    build: ./frontend
    container_name: ssto-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ssto-network

networks:
  ssto-network:
    driver: bridge

volumes:
  postgres_data: