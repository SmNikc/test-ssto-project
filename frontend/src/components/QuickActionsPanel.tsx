import React from 'react';
import { Grid, Button } from '@mui/material';
import { useTrainingMode } from '../contexts/TrainingModeContext';
import { BackendService } from '../services/BackendService';

const QuickActionsPanel = () => {
  const { toggleTrainingMode } = useTrainingMode();

  const handleGenerateTest = async () => {
    try {
      await BackendService.generateTestSignal();
      console.info('–¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.');
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª', error);
    }
  };

  const handleProcessEmail = async () => {
    try {
      await BackendService.processEmailQueue();
      console.info('–ó–∞–ø—É—â–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ email –æ—á–µ—Ä–µ–¥–∏.');
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å email –æ—á–µ—Ä–µ–¥—å', error);
    }
  };

  const handleSync = async () => {
    try {
      await BackendService.syncWithExternal();
      console.info('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    } catch (error) {
      console.error('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –æ—à–∏–±–∫–æ–π', error);
    }
  };

  const handleSystemCheck = async () => {
    try {
      await BackendService.runSystemCheck();
      console.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    } catch (error) {
      console.error('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –æ—à–∏–±–∫–æ–π', error);
    }
  };

  return (
    <Grid container spacing={2} sx={{ mt: 2 }}>
      <Grid item xs={3}>
        <Button variant="contained" color="primary" fullWidth onClick={handleProcessEmail}>
          üìß –û–±—Ä–∞–±–æ—Ç–∞—Ç—å email –æ—á–µ—Ä–µ–¥—å
        </Button>
      </Grid>
      <Grid item xs={3}>
        <Button variant="contained" color="primary" fullWidth onClick={handleSync}>
          üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ü–æ–∏—Å–∫-–ú–æ—Ä–µ
        </Button>
      </Grid>
      <Grid item xs={3}>
        <Button variant="contained" color="primary" fullWidth onClick={handleGenerateTest}>
          üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        </Button>
      </Grid>
      <Grid item xs={3}>
        <Button variant="contained" color="primary" fullWidth onClick={handleSystemCheck}>
          üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        </Button>
      </Grid>
      <Grid item xs={12}>
        <Button variant="outlined" color="secondary" fullWidth onClick={toggleTrainingMode}>
          üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        </Button>
      </Grid>
    </Grid>
  );
};

export default QuickActionsPanel;