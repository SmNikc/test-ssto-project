# frontend/nginx.conf
server {
  listen 80;
  server_name localhost;

  root /usr/share/nginx/html;
  index index.html;

  # Docker DNS внутри контейнера. Динамический резолв, IPv6 off.
  resolver 127.0.0.11 ipv6=off valid=10s;
  resolver_timeout 5s;

  # Backend upstream через переменную — резолвится при каждом запросе.
  set $backend_upstream http://ssto-backend:3001;

  # SPA: сначала статический файл, иначе — index.html
  location / {
    try_files $uri /index.html;
  }

  # Health: /api/health → /health на бэке
  location = /api/health {
    proxy_pass $backend_upstream/health;
    proxy_http_version 1.1;

    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;

    proxy_connect_timeout 10s;
    proxy_send_timeout    30s;
    proxy_read_timeout    30s;
    proxy_next_upstream   error timeout http_502 http_503 http_504;
  }

  # Общий API: сохраняем путь /api/* (ВАЖНО: без завершающего слеша в proxy_pass)
  location /api/ {
    proxy_pass $backend_upstream;
    proxy_http_version 1.1;

    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;

    proxy_connect_timeout 10s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;
    proxy_buffering       off;
    proxy_next_upstream   error timeout http_502 http_503 http_504;
  }

  # WebSocket / Socket.IO
  location /socket.io/ {
    proxy_pass $backend_upstream/socket.io/;
    proxy_http_version 1.1;

    proxy_set_header Upgrade            $http_upgrade;
    proxy_set_header Connection         "upgrade";
    proxy_set_header Host               $host;

    proxy_read_timeout    600s;
    proxy_send_timeout    600s;
    proxy_connect_timeout 10s;

    proxy_next_upstream error timeout http_502 http_503 http_504;
  }

  # Лимит размера тела запроса (загрузки)
  client_max_body_size 20m;
}
