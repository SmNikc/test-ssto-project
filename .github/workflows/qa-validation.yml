name: QA Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      E2E_BASE_URL: http://localhost
      API_BASE: http://localhost:3001/api
      MAILHOG: http://localhost:8025
      SMOKE_PRIMARY_EMAIL: od_smrcc@morflot.ru
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies
        run: npm install

      - name: Install backend dependencies
        run: npm install
        working-directory: backend-nest

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Launch application stack
        run: docker compose up -d postgres backend frontend mailhog

      - name: Wait for backend readiness
        run: |
          echo "Waiting for backend health..."
          timeout 180 bash -c 'until curl -fsS http://localhost:3001/health; do sleep 5; done'

      - name: Backend unit tests
        run: npm run test:backend:unit

      - name: Backend integration tests
        run: npm run test:backend:integration

      - name: Smoke scenario
        run: npm run test:smoke:ci

      - name: Playwright E2E
        run: npm run test:e2e

      - name: Archive QA artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qa-artifacts
          path: |
            backend-nest/coverage
            tests/mailhog-snapshot.json
            tests/artifacts/playwright-report
            playwright-report
          if-no-files-found: ignore

      - name: Collect docker logs
        if: always()
        run: |
          mkdir -p tests/artifacts
          docker compose logs > tests/artifacts/docker-compose.log

      - name: Shutdown stack
        if: always()
        run: docker compose down
