#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–≤–∫–ª–∞–¥–æ–∫) –≤ —Å–∏—Å—Ç–µ–º–µ –°–°–¢–û
–ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: C:\Projects\test-ssto-project\fix_navigation.py
"""
import re
import os
from datetime import datetime
import shutil

def fix_navigation():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–≤–∫–ª–∞–¥–æ–∫)"""
    
    file_path = r'C:\Projects\test-ssto-project\index_14_36.html'
    
    print("=" * 70)
    print("–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ù–ê–í–ò–ì–ê–¶–ò–ò –°–°–¢–û")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = f"{file_path}.before_nav_fix_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    print("\nüìñ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞...")
    try:
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        with open(backup_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"   ‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω")
        print(f"   üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {os.path.basename(backup_path)}")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏: {str(e)}")
        return False
    
    # 1. –ò–°–ü–†–ê–í–õ–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ switchTab - –¥–µ–ª–∞–µ–º –µ—ë –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∏ –Ω–∞–¥—ë–∂–Ω–æ–π
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ switchTab...")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é switchTab –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ IIFE
    content = re.sub(
        r'\(\(\) => \{[^}]*window\.switchTab[^}]+\}\)\(\);',
        '',
        content,
        flags=re.DOTALL
    )
    
    # –ù–æ–≤–∞—è –Ω–∞–¥–µ–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è switchTab
    new_switch_tab = """
        // ===================== –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –í–ö–õ–ê–î–û–ö =====================
        function switchTab(targetId, e) {
            if (e) e.preventDefault();
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
            document.querySelectorAll('.tab').forEach(b => b.classList.remove('active'));
            document.querySelectorAll('.content').forEach(c => c.classList.remove('active'));
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
            const targetContent = document.getElementById(targetId);
            if (targetContent) {
                targetContent.classList.add('active');
            }
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            const btn = e?.target || document.querySelector(`.tab[data-tab="${targetId}"]`);
            if (btn && btn.classList.contains('tab')) {
                btn.classList.add('active');
            }
            
            // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–∞—á–∞–ª—É
            window.scrollTo({ top: 0, behavior: 'instant' });
            
            // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Å–µ–∫—Ü–∏–∏
            if (targetId === 'map' && window.olMap && typeof window.olMap.updateSize === 'function') {
                setTimeout(() => {
                    window.olMap.updateSize();
                }, 100);
            }
            
            console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –≤–∫–ª–∞–¥–∫—É:', targetId);
        }
        
        // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ
        window.switchTab = switchTab;
"""
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è store
    store_pattern = r'const store = new DataStore\(\);'
    if re.search(store_pattern, content):
        content = re.sub(
            store_pattern,
            f'const store = new DataStore();\n{new_switch_tab}',
            content
        )
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è switchTab –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ")
    
    # 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú HTML –ö–ù–û–ü–û–ö –ù–ê–í–ò–ì–ê–¶–ò–ò
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HTML –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = [
        ('dashboard', 'üìä –ì–ª–∞–≤–Ω–∞—è'),
        ('new-request', '‚ûï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞'),
        ('requests', 'üìã –ó–∞—è–≤–∫–∏'),
        ('signals', 'üì° –°–∏–≥–Ω–∞–ª—ã'),
        ('terminals', 'üñ•Ô∏è –¢–µ—Ä–º–∏–Ω–∞–ª—ã'),
        ('map', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞'),
        ('reports', 'üìà –û—Ç—á—ë—Ç—ã')
    ]
    
    # –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫ nav
    nav_pattern = r'<nav>(.*?)</nav>'
    nav_match = re.search(nav_pattern, content, re.DOTALL)
    
    if nav_match:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
        new_nav = '<nav>\n'
        for tab_id, tab_text in nav_buttons:
            active_class = ' class="tab active"' if tab_id == 'dashboard' else ' class="tab"'
            new_nav += f'            <button{active_class} data-tab="{tab_id}" onclick="switchTab(\'{tab_id}\', event)">{tab_text}</button>\n'
        new_nav += '        </nav>'
        
        content = re.sub(nav_pattern, new_nav, content, flags=re.DOTALL)
        print("   ‚úÖ HTML –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
    # 3. –î–û–ë–ê–í–õ–Ø–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–ë–´–¢–ò–ô –î–õ–Ø –î–ï–õ–ï–ì–ò–†–û–í–ê–ù–ò–Ø (–∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)
    print("\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π...")
    
    event_handler = """
        // ===================== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ò–ö–û–í –ù–ê –í–ö–õ–ê–î–ö–ò (–î–ï–õ–ï–ì–ò–†–û–í–ê–ù–ò–ï) =====================
        document.addEventListener('DOMContentLoaded', function() {
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            document.addEventListener('click', function(e) {
                const tab = e.target.closest('.tab[data-tab]');
                if (tab) {
                    e.preventDefault();
                    const targetId = tab.getAttribute('data-tab');
                    switchTab(targetId, e);
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (typeof loadDashboard === 'function') loadDashboard();
            if (typeof loadRequests === 'function') loadRequests();
            if (typeof loadSignals === 'function') loadSignals();
            if (typeof loadTerminals === 'function') loadTerminals();
            
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        });
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º —Ç–µ–≥–æ–º script
    script_end = content.rfind('</script>')
    if script_end > 0:
        content = content[:script_end] + event_handler + '\n' + content[script_end:]
        print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–æ–±–∞–≤–ª–µ–Ω")
    
    # 4. –£–ë–ò–†–ê–ï–ú –î–£–ë–õ–ò–†–£–Æ–©–ò–ï–°–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
    print("\nüîß –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ inline –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ —Ç–∞–±–∞—Ö –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
    content = re.sub(
        r'<button class="tab([^"]*)" data-tab="([^"]+)">',
        r'<button class="tab\1" data-tab="\2" onclick="switchTab(\'\2\', event)">',
        content
    )
    
    # 5. –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ê–ö–¢–ò–í–ê–¶–ò–Æ –ü–ï–†–í–û–ô –í–ö–õ–ê–î–ö–ò
    print("\nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏...")
    
    init_dashboard = """
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫—É "–ì–ª–∞–≤–Ω–∞—è" –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                switchTab('dashboard');
            }, 100);
        });
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if 'switchTab(\'dashboard\')' not in content:
        script_end = content.rfind('</script>')
        if script_end > 0:
            content = content[:script_end] + init_dashboard + '\n' + content[script_end:]
            print("   ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    
    # 6. –ü–†–û–í–ï–†–Ø–ï–ú –ò –ò–°–ü–†–ê–í–õ–Ø–ï–ú ID –ö–û–ù–¢–ï–ù–¢–ù–´–• –ë–õ–û–ö–û–í
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ ID –∫–æ–Ω—Ç–µ–Ω—Ç–Ω—ã—Ö –±–ª–æ–∫–æ–≤...")
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤—Å–µ content –±–ª–æ–∫–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ id
    for tab_id, _ in nav_buttons:
        pattern = f'<div class="content[^"]*" id="{tab_id}"'
        if not re.search(pattern, content):
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –±–ª–æ–∫ –±–µ–∑ id –∏ –¥–æ–±–∞–≤–∏—Ç—å
            content = re.sub(
                f'<div class="content([^"]*)">(.*?{tab_id})',
                f'<div class="content\\1" id="{tab_id}">\\2',
                content,
                flags=re.DOTALL | re.IGNORECASE
            )
    
    print("   ‚úÖ ID –∫–æ–Ω—Ç–µ–Ω—Ç–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    print("\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞...")
    try:
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"   ‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {file_path}")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")
        return False
    
    print("\n" + "=" * 70)
    print("‚úÖ –ù–ê–í–ò–ì–ê–¶–ò–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ê!")
    print("\nüìã –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("  ‚Ä¢ –§—É–Ω–∫—Ü–∏—è switchTab —Å–¥–µ–ª–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π")
    print("  ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã onclick –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö")
    print("  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π")
    print("  ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞")
    print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã ID –∫–æ–Ω—Ç–µ–Ω—Ç–Ω—ã—Ö –±–ª–æ–∫–æ–≤")
    
    print("\n‚ö†Ô∏è –¢–µ–ø–µ—Ä—å:")
    print("  1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5)")
    print("  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫")
    print("  3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
    
    print("\nüîç –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:")
    print("  1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
    print("  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    print("  3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: switchTab('terminals')")
    
    return True

def check_backup_versions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"""
    
    project_dir = r'C:\Projects\test-ssto-project'
    
    print("\nüìÅ –î–û–°–¢–£–ü–ù–´–ï –†–ï–ó–ï–†–í–ù–´–ï –ö–û–ü–ò–ò:")
    print("-" * 50)
    
    backups = []
    for file in os.listdir(project_dir):
        if 'index_14_36.html' in file and file != 'index_14_36.html':
            file_path = os.path.join(project_dir, file)
            size = os.path.getsize(file_path) / 1024  # –≤ KB
            mtime = datetime.fromtimestamp(os.path.getmtime(file_path))
            backups.append((file, size, mtime))
    
    backups.sort(key=lambda x: x[2], reverse=True)
    
    for backup, size, mtime in backups:
        print(f"  ‚Ä¢ {backup}")
        print(f"    –†–∞–∑–º–µ—Ä: {size:.1f} KB | –î–∞—Ç–∞: {mtime.strftime('%Y-%m-%d %H:%M:%S')}")
    
    print("\nüí° –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:")
    print('   shutil.copy("backup_file", "index_14_36.html")')

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    check_backup_versions()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    success = fix_navigation()
    
    if success:
        print("\n‚ú® –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üîÑ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
    else:
        print("\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")