# test-confirmation-cycle.ps1
# –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –ø–æ –∑–∞–∫—Ä—ã—Ç—ã–º –∑–∞—è–≤–∫–∞–º

Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
Write-Host "   –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–ü–†–ê–í–ö–ò –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ô –°–°–¢–û" -ForegroundColor Yellow
Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan

$baseUrl = "http://localhost:3000/api"

# ========================================
# –≠–¢–ê–ü 1: –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ï–†–ê
# ========================================
Write-Host "`nüì° –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Yellow
try {
    $health = Invoke-RestMethod -Uri "$baseUrl/health" -Method GET
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run start:dev" -ForegroundColor Red
    exit 1
}

# ========================================
# –≠–¢–ê–ü 2: –ü–û–õ–£–ß–ï–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ó–ê–Ø–í–û–ö
# ========================================
Write-Host "`nüìã –≠–¢–ê–ü 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫..." -ForegroundColor Yellow
try {
    $requests = Invoke-RestMethod -Uri "$baseUrl/requests" -Method GET
    $totalRequests = $requests.data.Count
    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫: $totalRequests" -ForegroundColor Green
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏ (—Å–æ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏)
    $matchedRequests = $requests.data | Where-Object { 
        $_.status -eq "completed" -or $_.signal_id -ne $null 
    }
    
    if ($matchedRequests.Count -eq 0) {
        Write-Host "‚ö†Ô∏è –ù–µ—Ç –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–æ–∫. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ..." -ForegroundColor Yellow
        $createNew = $true
    } else {
        Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–æ–∫: $($matchedRequests.Count)" -ForegroundColor Green
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏
        Write-Host "`n–ó–∞–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏:" -ForegroundColor Cyan
        foreach ($req in $matchedRequests) {
            Write-Host "  ID: $($req.id) | –°—É–¥–Ω–æ: $($req.vessel_name) | MMSI: $($req.mmsi) | Email: $($req.contact_email)"
        }
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: $_" -ForegroundColor Red
    $createNew = $true
}

# ========================================
# –≠–¢–ê–ü 3: –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# ========================================
if ($createNew) {
    Write-Host "`nüî® –≠–¢–ê–ü 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow
    
    # –°–æ–∑–¥–∞–µ–º 2 —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
    $testRequests = @(
        @{
            vessel_name = "–ú–í –ö–∞–ø–∏—Ç–∞–Ω –ò–≤–∞–Ω–æ–≤"
            mmsi = "273456789"
            imo = "IMO9234567"
            ship_owner = "–û–û–û –°—É–¥–æ—Ö–æ–¥–Ω–∞—è –ö–æ–º–ø–∞–Ω–∏—è"
            contact_email = "test1@example.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email!
            contact_phone = "+7 999 111-22-33"
            test_date = (Get-Date).AddHours(1).ToString("yyyy-MM-ddTHH:mm:ssZ")
            test_window_hours = 2
            inmarsat_number = "427309676"
        },
        @{
            vessel_name = "–¢–• –ü–æ–ª—è—Ä–Ω–∞—è –ó–≤–µ–∑–¥–∞"
            mmsi = "273789012"
            imo = "IMO9345678"
            ship_owner = "–ê–û –ú–æ—Ä—Å–∫–æ–π –§–ª–æ—Ç"
            contact_email = "test2@example.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email!
            contact_phone = "+7 999 333-44-55"
            test_date = (Get-Date).AddHours(2).ToString("yyyy-MM-ddTHH:mm:ssZ")
            test_window_hours = 2
            inmarsat_number = "427309677"
        }
    )
    
    $createdRequests = @()
    foreach ($reqData in $testRequests) {
        try {
            Write-Host "  –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –¥–ª—è —Å—É–¥–Ω–∞: $($reqData.vessel_name)..." -NoNewline
            $json = $reqData | ConvertTo-Json
            $response = Invoke-RestMethod -Uri "$baseUrl/requests" `
                -Method POST `
                -ContentType "application/json" `
                -Body $json
            
            $createdRequests += $response.data
            Write-Host " ‚úÖ ID: $($response.data.id)" -ForegroundColor Green
        } catch {
            Write-Host " ‚ùå –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∑–∞—è–≤–æ–∫
    Write-Host "`n  –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∑–∞—è–≤–æ–∫..." -ForegroundColor Yellow
    foreach ($req in $createdRequests) {
        $signalData = @{
            mmsi = $req.mmsi
            signal_type = "TEST"
            coordinates = @{
                lat = 43.08
                lon = 131.86
            }
            received_at = (Get-Date).ToString("yyyy-MM-ddTHH:mm:ssZ")
            raw_message = "Test SSAS signal for $($req.vessel_name)"
        } | ConvertTo-Json
        
        try {
            Write-Host "  –°–æ–∑–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è MMSI: $($req.mmsi)..." -NoNewline
            $signal = Invoke-RestMethod -Uri "$baseUrl/signals" `
                -Method POST `
                -ContentType "application/json" `
                -Body $signalData
            Write-Host " ‚úÖ" -ForegroundColor Green
        } catch {
            Write-Host " ‚ùå" -ForegroundColor Red
        }
    }
    
    $matchedRequests = $createdRequests
}

# ========================================
# –≠–¢–ê–ü 4: –û–¢–ü–†–ê–í–ö–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ô
# ========================================
Write-Host "`nüìß –≠–¢–ê–ü 4: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP
Write-Host "  –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Cyan
try {
    $smtpTest = Invoke-RestMethod -Uri "$baseUrl/test/smtp" -Method GET -ErrorAction SilentlyContinue
    Write-Host "  ‚úÖ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "  ‚ö†Ô∏è SMTP —Ç–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..." -ForegroundColor Yellow
}

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–∫—Ä—ã—Ç–æ–π –∑–∞—è–≤–∫–∏
$successCount = 0
$errorCount = 0

foreach ($request in $matchedRequests) {
    Write-Host "`n  –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ ID: $($request.id)" -ForegroundColor Cyan
    Write-Host "    –°—É–¥–Ω–æ: $($request.vessel_name)"
    Write-Host "    MMSI: $($request.mmsi)"
    Write-Host "    Email: $($request.contact_email)"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    $confirmationData = @{
        request_id = $request.id
        send_email = $true
        generate_pdf = $true
    } | ConvertTo-Json
    
    try {
        Write-Host "    üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è..." -NoNewline
        
        # –í–∞—Ä–∏–∞–Ω—Ç 1: –ß–µ—Ä–µ–∑ endpoint –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π
        $confirmUrl = "$baseUrl/requests/$($request.id)/send-confirmation"
        $result = Invoke-RestMethod -Uri $confirmUrl `
            -Method POST `
            -ContentType "application/json" `
            -Body $confirmationData `
            -ErrorAction SilentlyContinue
        
        if ($result) {
            Write-Host " ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" -ForegroundColor Green
            $successCount++
        } else {
            # –í–∞—Ä–∏–∞–Ω—Ç 2: –ß–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (—Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫—É)
            $statusData = @{ 
                status = "completed"
                send_confirmation = $true 
            } | ConvertTo-Json
            
            $result = Invoke-RestMethod -Uri "$baseUrl/requests/$($request.id)/status" `
                -Method PUT `
                -ContentType "application/json" `
                -Body $statusData
            
            Write-Host " ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Å—Ç–∞—Ç—É—Å!" -ForegroundColor Green
            $successCount++
        }
    } catch {
        Write-Host " ‚ùå –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
        $errorCount++
    }
}

# ========================================
# –≠–¢–ê–ü 5: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
# ========================================
Write-Host "`nüîç –≠–¢–ê–ü 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
try {
    $logs = Invoke-RestMethod -Uri "$baseUrl/logs?type=email" -Method GET -ErrorAction SilentlyContinue
    if ($logs.data) {
        Write-Host "  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:" -ForegroundColor Cyan
        $logs.data | Select-Object -First 5 | ForEach-Object {
            Write-Host "    [$($_.created_at)] $($_.message)"
        }
    }
} catch {
    Write-Host "  ‚ÑπÔ∏è –õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Gray
}

# ========================================
# –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
# ========================================
Write-Host "`n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
Write-Host "                    –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê" -ForegroundColor Yellow
Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan

Write-Host "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞—è–≤–æ–∫: $($matchedRequests.Count)" -ForegroundColor White
Write-Host "  ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π: $successCount" -ForegroundColor Green
Write-Host "  ‚Ä¢ –û—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏: $errorCount" -ForegroundColor $(if ($errorCount -gt 0) { "Red" } else { "Gray" })

Write-Host "`nüìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:" -ForegroundColor Yellow
Write-Host "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ email –∞–¥—Ä–µ—Å–∞"
Write-Host "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É '–°–ø–∞–º'"
Write-Host "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏"
Write-Host "  4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É —Å PDF: backend-nest/temp/"

Write-Host "`nüí° –°–æ–≤–µ—Ç—ã –ø–æ –æ—Ç–ª–∞–¥–∫–µ:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ –ï—Å–ª–∏ –ø–∏—Å—å–º–∞ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env"
Write-Host "  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ email –∞–¥—Ä–µ—Å–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
Write-Host "  ‚Ä¢ –î–ª—è Gmail –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è '–ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'"
Write-Host "  ‚Ä¢ –î–ª—è Mail.ru –≤–∫–ª—é—á–∏—Ç–µ '–ü–∞—Ä–æ–ª—å –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'"

# ========================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´
# ========================================
Write-Host "`nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Yellow
Write-Host @"

# –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email:
`$emailTest = @{
    to = "your_email@gmail.com"
    subject = "Test SSTO"
    text = "Test message"
} | ConvertTo-Json

Invoke-RestMethod -Uri "$baseUrl/test/email" ``
    -Method POST ``
    -ContentType "application/json" ``
    -Body `$emailTest

# –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞—è–≤–∫—É:
Invoke-RestMethod -Uri "$baseUrl/requests/1"

# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏:
Invoke-RestMethod -Uri "$baseUrl/requests/1/generate-pdf" -Method POST
"@

Write-Host "`n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green