// fix-duplicate-errors.js
// –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ C:\Projects\test-ssto-project\backend-nest\fix-duplicate-errors.js
// –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—à–∏–±–∫–∏

const fs = require('fs');
const path = require('path');

const PROJECT_ROOT = 'C:\\Projects\\test-ssto-project\\backend-nest';

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –∏ –æ—à–∏–±–æ–∫ —Ç–∏–ø–æ–≤...\n');

// 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º C:\Projects\test-ssto-project\backend-nest\src\models\signal.model.ts
console.log('1Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º signal.model.ts - —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã request_id...');
const signalModelPath = path.join(PROJECT_ROOT, 'src', 'models', 'signal.model.ts');
let signalContent = fs.readFileSync(signalModelPath, 'utf8');

// –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è request_id (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å @Column)
// –£–¥–∞–ª—è–µ–º –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
signalContent = signalContent.replace(/\n\s*\/\/\s*–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Ç–∏–ø–æ–≤[\s\S]*?get request_id\(\): any[\s\S]*?\n\s*}/g, '');

// –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ request_id –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Ç–∏–ø
signalContent = signalContent.replace(
  /@Column\([\s\S]*?\)\s*request_id:\s*string;/g,
  `@Column({
    type: DataType.INTEGER,
    allowNull: true
  })
  request_id: number;`
);

fs.writeFileSync(signalModelPath, signalContent, 'utf8');
console.log('  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω signal.model.ts');

// 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º C:\Projects\test-ssto-project\backend-nest\src\services\email-parser.service.ts
console.log('\n2Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º email-parser.service.ts - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º id –≤ —á–∏—Å–ª–æ...');
const emailParserPath = path.join(PROJECT_ROOT, 'src', 'services', 'email-parser.service.ts');
if (fs.existsSync(emailParserPath)) {
  let emailContent = fs.readFileSync(emailParserPath, 'utf8');
  
  // –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –≥–¥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è requestData –∏ —É–±–∏—Ä–∞–µ–º –ø–æ–ª–µ id –≤–æ–æ–±—â–µ
  // —Ç–∞–∫ –∫–∞–∫ id –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ë–î
  emailContent = emailContent.replace(
    /id:\s*['"]?\w+['"]?,?\s*\n/g,
    ''
  );
  
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å id, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —á–∏—Å–ª–æ
  emailContent = emailContent.replace(
    /id:\s*['"](\w+)['"]/g,
    'id: parseInt("$1", 10)'
  );
  
  fs.writeFileSync(emailParserPath, emailContent, 'utf8');
  console.log('  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω email-parser.service.ts');
}

// 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º C:\Projects\test-ssto-project\backend-nest\src\models\request.model.ts
console.log('\n3Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º vessel_id –≤ request.model.ts...');
const requestModelPath = path.join(PROJECT_ROOT, 'src', 'models', 'request.model.ts');
let requestContent = fs.readFileSync(requestModelPath, 'utf8');

// –î–æ–±–∞–≤–ª—è–µ–º vessel_id –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if (!requestContent.includes('vessel_id:')) {
  // –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –ø–µ—Ä–µ–¥ –≥–µ—Ç—Ç–µ—Ä–∞–º–∏ –∏–ª–∏ –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ü–æ–º –∫–ª–∞—Å—Å–∞
  const getterIndex = requestContent.indexOf('get imo_number()');
  const insertPoint = getterIndex > 0 ? requestContent.lastIndexOf('\n', getterIndex - 1) : requestContent.lastIndexOf('\n}') - 1;
  
  const vesselIdField = `

  @Column({
    field: 'vessel_id',
    type: DataType.INTEGER,
    allowNull: true
  })
  vessel_id: number;
`;
  
  requestContent = requestContent.substring(0, insertPoint) + vesselIdField + requestContent.substring(insertPoint);
  console.log('  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ vessel_id');
}

fs.writeFileSync(requestModelPath, requestContent, 'utf8');

// 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º C:\Projects\test-ssto-project\backend-nest\src\signal\signal.service.ts
console.log('\n4Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º signal.service.ts - –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤...');
const signalServicePath = path.join(PROJECT_ROOT, 'src', 'signal', 'signal.service.ts');
if (fs.existsSync(signalServicePath)) {
  let serviceContent = fs.readFileSync(signalServicePath, 'utf8');
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É 85 - –ø—Ä–∏–≤–æ–¥–∏–º id –∫ —Å—Ç—Ä–æ–∫–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  serviceContent = serviceContent.replace(
    /signal\.request_id = matchingRequest\.id;/g,
    'signal.request_id = matchingRequest.id;'
  );
  
  // –ï—Å–ª–∏ signal.request_id —Ç—Ä–µ–±—É–µ—Ç number, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
  // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç string, –º–µ–Ω—è–µ–º –Ω–∞:
  // signal.request_id = matchingRequest.id.toString();
  
  fs.writeFileSync(signalServicePath, serviceContent, 'utf8');
  console.log('  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω signal.service.ts');
}

console.log('\n‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('\nüìã –û–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ñ–∞–π–ª—ã:');
console.log('  ‚Ä¢ C:\\Projects\\test-ssto-project\\backend-nest\\src\\models\\signal.model.ts');
console.log('  ‚Ä¢ C:\\Projects\\test-ssto-project\\backend-nest\\src\\services\\email-parser.service.ts');
console.log('  ‚Ä¢ C:\\Projects\\test-ssto-project\\backend-nest\\src\\models\\request.model.ts');
console.log('  ‚Ä¢ C:\\Projects\\test-ssto-project\\backend-nest\\src\\signal\\signal.service.ts');

console.log('\nüöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend:');
console.log('  Ctrl+C –∏ npm run start:dev');